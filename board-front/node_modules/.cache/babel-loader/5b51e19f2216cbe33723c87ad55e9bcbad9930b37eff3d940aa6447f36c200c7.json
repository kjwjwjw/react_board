{"ast":null,"code":"import axios from \"axios\";\nconst DOMAIN = 'http://localhost:4001';\nconst API_DOMAIN = `${DOMAIN}/api/v1`;\nconst SIGN_IN_URL = () => `${API_DOMAIN}/auth/sign-in`;\n_c = SIGN_IN_URL;\nconst SIGN_UP_URL = () => `${API_DOMAIN}/auth/sign-up`;\n_c2 = SIGN_UP_URL;\nexport const signInRequest = async requestBody => {\n  const result = await axios.post(SIGN_IN_URL(), requestBody).then(response => {\n    const responseBody = response.data;\n    return responseBody;\n  }).catch(error => {\n    if (!error.response) return null;\n    const responseBody = error.response.data;\n    return responseBody;\n  });\n  return result;\n};\nexport const signUpReqeust = async requestBody => {\n  const result = await axios.post(SIGN_UP_URL(), requestBody).then(response => {\n    const responseBody = response.data;\n    return responseBody;\n  }).catch(error => {\n    if (!error.response.data) return null;\n    const responseBody = error.response.data;\n    return responseBody;\n  });\n  return result;\n};\nvar _c, _c2;\n$RefreshReg$(_c, \"SIGN_IN_URL\");\n$RefreshReg$(_c2, \"SIGN_UP_URL\");","map":{"version":3,"names":["axios","DOMAIN","API_DOMAIN","SIGN_IN_URL","_c","SIGN_UP_URL","_c2","signInRequest","requestBody","result","post","then","response","responseBody","data","catch","error","signUpReqeust","$RefreshReg$"],"sources":["C:/Users/tbs03/Spring_react_mysql/react_board/board-front/src/apis/index.ts"],"sourcesContent":["import axios from \"axios\";\r\nimport { SignInRequestDto, SignUpRequestDto } from \"./request/auth\";\r\nimport { SignInResponseDto } from \"./response/auth\";\r\nimport { ResponseDto } from \"./response\";\r\n\r\n\r\nconst DOMAIN = 'http://localhost:4001';\r\n\r\nconst API_DOMAIN = `${DOMAIN}/api/v1`;\r\n\r\nconst SIGN_IN_URL = () => `${API_DOMAIN}/auth/sign-in`;\r\nconst SIGN_UP_URL = () => `${API_DOMAIN}/auth/sign-up`;\r\n\r\nexport const signInRequest = async (requestBody: SignInRequestDto) => {\r\n    const result = await axios.post(SIGN_IN_URL(), requestBody)\r\n        .then(response => {\r\n            const responseBody: SignInResponseDto = response.data;\r\n            return responseBody;\r\n        })\r\n        .catch(error => {\r\n            if(!error.response) return null;\r\n            const responseBody: ResponseDto = error.response.data;\r\n            return responseBody;\r\n        })\r\n    return result;\r\n}\r\n\r\nexport const signUpReqeust = async (requestBody: SignUpRequestDto) => {\r\n    const result = await axios.post(SIGN_UP_URL(), requestBody)\r\n        .then(response => {\r\n            const responseBody : SignUpRequestDto = response.data;\r\n            return responseBody;\r\n        })\r\n        .catch(error => {\r\n            if(!error.response.data) return null;\r\n            const responseBody: ResponseDto = error.response.data;\r\n            return responseBody;\r\n        });                         \r\n\r\n     return result;\r\n}\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAMzB,MAAMC,MAAM,GAAG,uBAAuB;AAEtC,MAAMC,UAAU,GAAI,GAAED,MAAO,SAAQ;AAErC,MAAME,WAAW,GAAGA,CAAA,KAAO,GAAED,UAAW,eAAc;AAACE,EAAA,GAAjDD,WAAW;AACjB,MAAME,WAAW,GAAGA,CAAA,KAAO,GAAEH,UAAW,eAAc;AAACI,GAAA,GAAjDD,WAAW;AAEjB,OAAO,MAAME,aAAa,GAAG,MAAOC,WAA6B,IAAK;EAClE,MAAMC,MAAM,GAAG,MAAMT,KAAK,CAACU,IAAI,CAACP,WAAW,CAAC,CAAC,EAAEK,WAAW,CAAC,CACtDG,IAAI,CAACC,QAAQ,IAAI;IACd,MAAMC,YAA+B,GAAGD,QAAQ,CAACE,IAAI;IACrD,OAAOD,YAAY;EACvB,CAAC,CAAC,CACDE,KAAK,CAACC,KAAK,IAAI;IACZ,IAAG,CAACA,KAAK,CAACJ,QAAQ,EAAE,OAAO,IAAI;IAC/B,MAAMC,YAAyB,GAAGG,KAAK,CAACJ,QAAQ,CAACE,IAAI;IACrD,OAAOD,YAAY;EACvB,CAAC,CAAC;EACN,OAAOJ,MAAM;AACjB,CAAC;AAED,OAAO,MAAMQ,aAAa,GAAG,MAAOT,WAA6B,IAAK;EAClE,MAAMC,MAAM,GAAG,MAAMT,KAAK,CAACU,IAAI,CAACL,WAAW,CAAC,CAAC,EAAEG,WAAW,CAAC,CACtDG,IAAI,CAACC,QAAQ,IAAI;IACd,MAAMC,YAA+B,GAAGD,QAAQ,CAACE,IAAI;IACrD,OAAOD,YAAY;EACvB,CAAC,CAAC,CACDE,KAAK,CAACC,KAAK,IAAI;IACZ,IAAG,CAACA,KAAK,CAACJ,QAAQ,CAACE,IAAI,EAAE,OAAO,IAAI;IACpC,MAAMD,YAAyB,GAAGG,KAAK,CAACJ,QAAQ,CAACE,IAAI;IACrD,OAAOD,YAAY;EACvB,CAAC,CAAC;EAEL,OAAOJ,MAAM;AAClB,CAAC;AAAA,IAAAL,EAAA,EAAAE,GAAA;AAAAY,YAAA,CAAAd,EAAA;AAAAc,YAAA,CAAAZ,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}