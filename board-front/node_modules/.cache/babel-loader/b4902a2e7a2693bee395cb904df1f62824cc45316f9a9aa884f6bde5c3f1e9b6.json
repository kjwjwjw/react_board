{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tbs03\\\\Spring_react_mysql\\\\react_board\\\\board-front\\\\src\\\\views\\\\Authentication\\\\index.tsx\",\n  _s3 = $RefreshSig$();\nimport React, { useRef, useState } from 'react';\nimport './style.css';\nimport InputBox from 'components/InputBox';\nimport { signInRequest } from 'apis';\nimport { useCookies } from 'react-cookie';\nimport { MAIN_PATH } from 'constant';\nimport { useNavigate } from 'react-router-dom';\n\n//          component: 인증 화면 컴포넌트       //\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Authentication() {\n  _s3();\n  var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n  //    state: 화면 상태    //\n  const [view, setView] = useState('sign-in');\n\n  //    state : 쿠키 상태   //\n  const [cookies, setCookie] = useCookies();\n\n  //      function : 네비게이트 함수        //\n  const navigator = useNavigate();\n\n  //        component : sign in card 컴포넌트    //\n  const SignInCard = () => {\n    _s();\n    //    state: 이메일 요소 참조 상태    //\n    const emailRef = useRef(null);\n    //    state: 패스워드 요소 참조 상태    //\n    const passwordRef = useRef(null);\n\n    //    state: 이메일 상태    //\n    const [email, setEmail] = useState('');\n    //    state : 패스워드 상태       //\n    const [password, setPassword] = useState('');\n    //    state : 패스워드 타입 상태       //\n    const [passwordType, setPasswordType] = useState('password');\n    //    state : 패스워드 버튼 상태       //\n    const [passwordButtonIcon, setPasswordButtonIcon] = useState('eye-light-off-icon');\n    //    state : 에러 상태       //\n    const [error, setError] = useState(false);\n\n    //    function : signInResponse 처리함수           //\n    const signInResponse = responseBody => {\n      if (!responseBody) {\n        alert('네트워크 이상입니다.');\n        return;\n      }\n      const {\n        code\n      } = responseBody;\n      if (code === 'DBE') alert('데이터베이스 오류입니다.');\n      if (code === 'VF' || code === 'SF') setError(true);\n      if (code !== 'SU') return;\n      const {\n        token,\n        expirationTime\n      } = responseBody;\n      const now = new Date().getTime();\n      const expires = new Date(now + expirationTime * 1000);\n      setCookie('accessToken', token, {\n        expires,\n        path: MAIN_PATH()\n      });\n      navigator(MAIN_PATH());\n    };\n\n    //   event handler : 이메일 변경 이벤트 처리        //\n    const onEmailChangeHandler = event => {\n      setError(false);\n      const {\n        value\n      } = event.target;\n      setEmail(value);\n    };\n\n    //  event handler : 비밀번호 변경 이벤트 처리\n    const onPasswordChangeHandler = event => {\n      setError(false);\n      const {\n        value\n      } = event.target;\n      setPassword(value);\n    };\n\n    //   event handler : 로그인 버튼 클릭 이벤트 처리    //\n    const onSignInButtonClickHandler = () => {\n      const requestBody = {\n        email,\n        password\n      };\n      signInRequest(requestBody).then(signInResponse);\n    };\n\n    //   event handler : 회원가입 버튼 클릭 이벤트 처리    //\n    const onSignUpLinkClickHandler = () => {\n      setView('sign-up');\n    };\n\n    //   event handler : 패스워드 버튼 클릭 이벤트 처리    //\n    const onPasswordButtonClickHandler = () => {\n      if (passwordType === 'text') {\n        setPasswordType('password');\n        setPasswordButtonIcon('eye-light-off-icon');\n      } else {\n        setPasswordType('text');\n        setPasswordButtonIcon('eye-light-on-icon');\n      }\n    };\n    //   event handler : 이메일 인풋 키 다운 이벤트 처리    //\n    const onEmailKeyDownHandler = event => {\n      if (event.key !== 'Enter') return;\n      if (!passwordRef.current) return;\n      passwordRef.current.focus();\n    };\n\n    //   event handler : 이메일 인풋 키 다운 이벤트 처리    //\n    const onPasswordKeyDownHandler = event => {\n      if (event.key !== 'Enter') return;\n      onSignInButtonClickHandler();\n    };\n\n    //        render : sign up card 컴포넌트 렌더링 //\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auth-card\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"auth-card-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"auth-card-top\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"auth-card-title-box\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"auth-card-title\",\n              children: '로그인'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(InputBox, {\n            ref: emailRef,\n            label: \"\\uC774\\uBA54\\uC77C \\uC8FC\\uC18C\",\n            type: \"text\",\n            placeholder: \"\\uC774\\uBA54\\uC77C \\uC8FC\\uC18C\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694.\",\n            error: error,\n            value: email,\n            onChange: onEmailChangeHandler,\n            onKeyDown: onEmailKeyDownHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(InputBox, {\n            ref: passwordRef,\n            label: \"\\uD328\\uC2A4\\uC6CC\\uB4DC\",\n            type: passwordType,\n            placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694.\",\n            error: error,\n            value: password,\n            onChange: onPasswordChangeHandler,\n            icon: passwordButtonIcon,\n            onButtonClick: onPasswordButtonClickHandler,\n            onKeyDown: onPasswordKeyDownHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"auth-card-bottom\",\n          children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"auth-sign-in-error-box\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"auth-sign-in-error-message\",\n              children: '이메일 주소 또는 비밀번호를 잘못 입력했습니다. \\n 입력하신 내용을 다시 확인해주세요.'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"black-large-full-button\",\n            onClick: onSignInButtonClickHandler,\n            children: '로그인'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"auth-description-box\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"auth-description\",\n              children: ['신규 사용자이신가요?', /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"auth-description-link\",\n                onClick: onSignUpLinkClickHandler,\n                children: '회원가입'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 64\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this);\n  };\n  _s(SignInCard, \"+MankW9kCs+nZSw2btqK0txeSEY=\");\n  const SignUpCard = () => {\n    _s2();\n    //      state : 이메일 요소 참조 상태        //\n    const emailRef = useRef(null);\n    //      state : 패스워드 요소 참조 상태        //\n    const passwordRef = useRef(null);\n    //      state : 패스워드 확인 요소 참조 상태        //\n    const passwordCheckRef = useRef(null);\n    //      state : 닉네임 요소 참조 상태        //\n    const nicknameRef = useRef(null);\n    //      state : 휴대 전화번호 요소 참조 상태        //\n    const telNumberRef = useRef(null);\n    //      state : 주소 요소 참조 상태        //\n    const addressRef = useRef(null);\n    //      state : 상세주소 요소 참조 상태        //\n    const addressDetailRef = useRef(null);\n\n    //      state : 페이지 번호 상태        //\n    const [page, setPage] = useState(2);\n\n    //      state : 이메일 상태        //\n    const [email, setEmail] = useState('');\n\n    //      state : 패스워드 상태        //\n    const [password, setPassword] = useState('');\n\n    //      state : 패스워드 체크 상태        //\n    const [passwordCheck, setPasswordCheck] = useState('');\n    //      state : 닉네임 상태               //\n    const [nickname, setNickname] = useState('');\n    //      state : 핸드폰 번호 상태               //\n    const [telNumber, setTelNumber] = useState('');\n    //      state : 주소 상태               //\n    const [address, setAddress] = useState('');\n    //      state : 상세주소 상태               //\n    const [addressDetail, setAddressDetail] = useState('');\n\n    //      state : 패스워드 타입 상태        //\n    const [passwordType, setPasswordType] = useState('password');\n    //      state : 패스워드 체크 타입 상태        //\n    const [passwordCheckType, setPasswordCheckType] = useState('password');\n\n    //      state : 이메일 에러 상태        //\n    const [isEmailError, setEmailError] = useState(false);\n\n    //      state : 패스워드 에러 상태        //\n    const [isPasswordError, setPasswordError] = useState(false);\n\n    //      state : 패스워드 확인 에러 상태        //\n    const [isPasswordCheckError, setPasswordCheckError] = useState(false);\n    //      state : 닉네임 에러 상태        //\n    const [isNicknameError, setsNicknameError] = useState(false);\n    //      state : 핸드폰 번호 에러 상태        //\n    const [isTelNumberError, setTelNumberError] = useState(false);\n    //      state : 주소 에러 상태        //\n    const [isAddressError, setAddressError] = useState(false);\n\n    //      state :이메일 에러 메세지 상태        //\n    const [emailErrorMessage, setEmailErrorMessage] = useState('');\n\n    //      state :패스워드 에러 메세지 상태        //\n    const [passwordErrorMessage, setPasswordErrorMessage] = useState('');\n\n    //      state :패스워드 확인 에러 메세지 상태        //\n    const [passwordCheckErrorMessage, setPasswordCheckErrorMessage] = useState('');\n\n    //      state : 닉네임  에러 메세지 상태        //\n    const [nicknameErrorMessage, setNciknameErrorMessage] = useState('');\n    //      state : 핸드폰 번호  에러 메세지 상태        //\n    const [telNumberErrorMessage, setTelNumbeErrorMessage] = useState('');\n    //      state : 주소  에러 메세지 상태        //\n    const [addressErrorMessage, setAddressErrorMessage] = useState('');\n\n    //      state : 패스워드 버튼 아이콘 상태         //\n    const [passwordButtonIcon, setPasswordButtonIcon] = useState('eye-light-off-icon');\n\n    //      state : 패스워드 버튼 아이콘 상태         //\n    const [passwordCheckButtonIcon, setPasswordCheckButtonIcon] = useState('eye-light-off-icon');\n\n    // event handler :  이메일 변경 이벤트 처리       //\n    const onEmailChangeHandler = event => {\n      const {\n        value\n      } = event.target;\n      setEmail(value);\n    };\n\n    // event handler :  패스워드 변경 이벤트 처리       //\n    const onPasswordChangeHandler = event => {\n      const {\n        value\n      } = event.target;\n      setPassword(value);\n    };\n\n    // event handler :  패스워드 확인 변경 이벤트 처리       //\n    const onPasswordCheckChangeHandler = event => {\n      const {\n        value\n      } = event.target;\n      setPasswordCheck(value);\n    };\n    // event handler : 닉네임 변경 이벤트 처리       //\n    const onNicknameChangeHandler = event => {\n      const {\n        value\n      } = event.target;\n      setNickname(value);\n    };\n    // event handler : 핸드폰 번호 변경 이벤트 처리       //\n    const onTelNumberChangeHandler = event => {\n      const {\n        value\n      } = event.target;\n      setTelNumber(value);\n    };\n    // event handler : 주소 변경 이벤트 처리       //\n    const onAddressChangeHandler = event => {\n      const {\n        value\n      } = event.target;\n      setAddress(value);\n    };\n    // event handler : 주소 변경 이벤트 처리       //\n    const onAddressDetailChangeHandler = event => {\n      const {\n        value\n      } = event.target;\n      setAddressDetail(value);\n    };\n\n    // event handler : 패스워드 버튼 클릭 이벤트 처리       //\n    const onPasswordButtonClickHandler = () => {\n      if (passwordButtonIcon === 'eye-light-off-icon') {\n        setPasswordButtonIcon('eye-light-on-icon');\n        setPasswordType('text');\n      } else {\n        setPasswordButtonIcon('eye-light-off-icon');\n        setPasswordType('password');\n      }\n    };\n    // event handler : 패스워드 버튼 클릭 이벤트 처리       //\n    const onPasswordCheckButtonClickHandler = () => {\n      if (passwordButtonIcon === 'eye-light-off-icon') {\n        setPasswordCheckButtonIcon('eye-light-on-icon');\n        setPasswordCheckType('text');\n      } else {\n        setPasswordCheckButtonIcon('eye-light-off-icon');\n        setPasswordCheckType('password');\n      }\n    };\n    // event handler : 주소 버튼 클릭 이벤트 처리       //\n    const onAddressButtonClickHandler = () => {};\n\n    //  event handler : 다음 단계 버튼 클릭 이벤트 처리 //\n    const onNextButtonClickHandler = () => {\n      const emailPattern = /^[a-zA-Z0-9]*@([-.]?[a-zA-Z0-9])*\\.[a-zA-Z]{2,4}$/;\n      const isEmailPattern = emailPattern.test(email);\n      if (!isEmailPattern) {\n        setEmailError(true);\n        setEmailErrorMessage('이메일 주소 포맷이 맞지 않습니다.');\n      }\n      const isCheckedPassword = password.trim().length > 8;\n      if (isCheckedPassword) {\n        setPasswordError(true);\n        setPasswordErrorMessage('비밀번호는 8자 이상 입력해주세요.');\n      }\n      const isEqualPassword = password === passwordCheck;\n      if (isEqualPassword) {\n        setPasswordCheckError(true);\n        setPasswordCheckErrorMessage('비밀번호가 일치하지 않습니다.');\n      }\n      if (!isEmailPattern || !isCheckedPassword || !isEqualPassword) return;\n      setPage(2);\n    };\n\n    // event handler : 회원가입 버튼 클릭 이벤트 처리   //\n    const onSignUpButtonClickHandler = () => {};\n\n    // event handler : 로그인 링크 클릭 이벤트 처리     //\n    const onSignInLinkClickHandler = () => {\n      setView('sign-in');\n    };\n\n    //  event handler : 이메일 키 다운 이벤트 처리      //\n    const onEmailKeyDownHandler = event => {\n      if (event.key == 'Enter') return;\n      if (!passwordRef.current) return;\n      passwordRef.current.focus();\n    };\n\n    //  event handler : 이메일 키 다운 이벤트 처리      //\n    const onPasswordKeyDownHandler = event => {\n      if (event.key == 'Enter') return;\n      if (!passwordCheckRef.current) return;\n      passwordCheckRef.current.focus();\n    };\n\n    //  event handler : 패스워드 확인 키 다운 이벤트 처리      //\n    const onPasswordCheckKeyDownHandler = event => {\n      if (event.key == 'Enter') return;\n      onNextButtonClickHandler();\n    };\n    //  event handler : 닉네임 키 다운 이벤트 처리      //\n    const onNicknameKeyDownHandler = event => {\n      if (event.key == 'Enter') return;\n    };\n    //  event handler : 휴대폰 번호 키 다운 이벤트 처리      //\n    const onTelNumberKeyDownHandler = event => {\n      if (event.key == 'Enter') return;\n    };\n    //  event handler : 주소 키 다운 이벤트 처리      //\n    const onAddressKeyDownHandler = event => {\n      if (event.key == 'Enter') return;\n    };\n    //  event handler : 상세 주소 키 다운 이벤트 처리      //\n    const onAddressDetailKeyDownHandler = event => {\n      if (event.key == 'Enter') return;\n    };\n\n    //      render : sign up card 컴포넌트 렌더링     //\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auth-card\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"auth-card-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"auth-card-top\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"auth-card-title-box\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"auth-card-title\",\n              children: '회원가입'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 377,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"auth-card-page\",\n              children: `${page}/2`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 378,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 376,\n            columnNumber: 13\n          }, this), page === 1 && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(InputBox, {\n              ref: emailRef,\n              label: \"\\uC774\\uBA54\\uC77C \\uC8FC\\uC18C*\",\n              type: \"text\",\n              placeholder: \"\\uC774\\uBA54\\uC77C \\uC8FC\\uC18C\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\",\n              value: email,\n              onChange: onEmailChangeHandler,\n              error: isEmailError,\n              message: emailErrorMessage,\n              onKeyDown: onEmailKeyDownHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 382,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(InputBox, {\n              ref: passwordRef,\n              label: \"\\uBE44\\uBC00\\uBC88\\uD638*\",\n              type: passwordType,\n              placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\",\n              value: password,\n              onChange: onPasswordChangeHandler,\n              error: isPasswordError,\n              message: passwordErrorMessage,\n              icon: passwordButtonIcon,\n              onButtonClick: onPasswordButtonClickHandler,\n              onKeyDown: onPasswordKeyDownHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 383,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(InputBox, {\n              ref: passwordCheckRef,\n              label: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uD655\\uC778*\",\n              type: passwordCheckType,\n              placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\\uB97C \\uB2E4\\uC2DC \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\",\n              value: passwordCheck,\n              onChange: onPasswordCheckChangeHandler,\n              error: isPasswordCheckError,\n              message: passwordCheckErrorMessage,\n              icon: passwordCheckButtonIcon,\n              onButtonClick: onPasswordCheckButtonClickHandler,\n              onKeyDown: onPasswordCheckKeyDownHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 384,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true), page === 2 && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(InputBox, {\n              ref: nicknameRef,\n              label: \"\\uB2C9\\uB124\\uC784*\",\n              type: \"text\",\n              placeholder: \"\\uB2C9\\uB124\\uC784\\uC744 \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\",\n              value: nickname,\n              onChange: onNicknameChangeHandler,\n              error: isNicknameError,\n              message: nicknameErrorMessage,\n              onKeyDown: onNicknameKeyDownHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 389,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(InputBox, {\n              ref: telNumberRef,\n              label: \"\\uD734\\uB300\\uD3F0 \\uBC88\\uD638\",\n              type: \"text\",\n              placeholder: \"\\uD734\\uB300\\uD3F0 \\uBC88\\uD638\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\",\n              value: telNumber,\n              onChange: onTelNumberChangeHandler,\n              error: isTelNumberError,\n              message: telNumberErrorMessage,\n              onKeyDown: onTelNumberKeyDownHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 390,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(InputBox, {\n              ref: addressRef,\n              label: \"\\uC8FC\\uC18C*\",\n              type: \"text\",\n              placeholder: \"\\uC6B0\\uD3B8\\uBC88\\uD638 \\uCC3E\\uAE30\",\n              value: address,\n              onChange: onAddressChangeHandler,\n              error: isAddressError,\n              message: addressErrorMessage,\n              icon: \"expand-right-light-icon\",\n              onButtonClick: onAddressButtonClickHandler,\n              onKeyDown: onAddressKeyDownHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 391,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(InputBox, {\n              ref: addressDetailRef,\n              label: \"\\uC0C1\\uC138 \\uC8FC\\uC18C\",\n              type: \"text\",\n              placeholder: \"\\uC0C1\\uC138 \\uC8FC\\uC18C\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694.\",\n              value: addressDetail,\n              onChange: onAddressDetailChangeHandler,\n              error: false,\n              onKeyDown: onAddressDetailKeyDownHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 392,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"auth-card-bottom\",\n          children: [page === 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"black-large-full-button\",\n            onClick: onNextButtonClickHandler,\n            children: '다음 단계'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 399,\n            columnNumber: 16\n          }, this), page === 2 && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"auth-consent-box\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"auth-check-box\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"check-ring-light-icon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 405,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 404,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"auth-consent-title\",\n                children: '개인정보 동의'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 407,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"auth-consent-link\",\n                children: '더보기 >'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 408,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 403,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"black-large-full-button\",\n              onClick: onSignUpButtonClickHandler,\n              children: '회원가입'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 410,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"auth-description-box\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"auth-description\",\n              children: ['이미 계정이 있으신가요? ', /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"auth-description-link\",\n                onClick: onSignInLinkClickHandler,\n                children: '로그인'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 415,\n                columnNumber: 65\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 415,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 414,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 373,\n      columnNumber: 7\n    }, this);\n  };\n  //          render : 컴포넌트 렌더링            //    \n  _s2(SignUpCard, \"1Bm1Q4irtwEGKptUjA85qlNGq9Q=\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"auth-wrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auth-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"auth-jumbotron-box\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"auth-jumbotron-contents\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"auth-logo-icon\",\n            children: \" \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 429,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"auth-jumbotron-text-box\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"auth-jumbotron-text\",\n              children: '환영합니다'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 431,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"auth-jumbotron-text\",\n              children: 'HOONS BOARD 입니다'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 432,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 430,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 428,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 427,\n        columnNumber: 11\n      }, this), view === 'sign-in' && /*#__PURE__*/_jsxDEV(SignInCard, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 437,\n        columnNumber: 34\n      }, this), view === 'sign-up' && /*#__PURE__*/_jsxDEV(SignUpCard, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 438,\n        columnNumber: 34\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 426,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 425,\n    columnNumber: 5\n  }, this);\n}\n_s3(Authentication, \"9S/UTW4boHJSdDcSeMSTDXfl25A=\", false, function () {\n  return [useCookies, useNavigate];\n});\n_c = Authentication;\n;\nvar _c;\n$RefreshReg$(_c, \"Authentication\");","map":{"version":3,"names":["React","useRef","useState","InputBox","signInRequest","useCookies","MAIN_PATH","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","Authentication","_s3","_s","$RefreshSig$","_s2","view","setView","cookies","setCookie","navigator","SignInCard","emailRef","passwordRef","email","setEmail","password","setPassword","passwordType","setPasswordType","passwordButtonIcon","setPasswordButtonIcon","error","setError","signInResponse","responseBody","alert","code","token","expirationTime","now","Date","getTime","expires","path","onEmailChangeHandler","event","value","target","onPasswordChangeHandler","onSignInButtonClickHandler","requestBody","then","onSignUpLinkClickHandler","onPasswordButtonClickHandler","onEmailKeyDownHandler","key","current","focus","onPasswordKeyDownHandler","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","label","type","placeholder","onChange","onKeyDown","icon","onButtonClick","onClick","SignUpCard","passwordCheckRef","nicknameRef","telNumberRef","addressRef","addressDetailRef","page","setPage","passwordCheck","setPasswordCheck","nickname","setNickname","telNumber","setTelNumber","address","setAddress","addressDetail","setAddressDetail","passwordCheckType","setPasswordCheckType","isEmailError","setEmailError","isPasswordError","setPasswordError","isPasswordCheckError","setPasswordCheckError","isNicknameError","setsNicknameError","isTelNumberError","setTelNumberError","isAddressError","setAddressError","emailErrorMessage","setEmailErrorMessage","passwordErrorMessage","setPasswordErrorMessage","passwordCheckErrorMessage","setPasswordCheckErrorMessage","nicknameErrorMessage","setNciknameErrorMessage","telNumberErrorMessage","setTelNumbeErrorMessage","addressErrorMessage","setAddressErrorMessage","passwordCheckButtonIcon","setPasswordCheckButtonIcon","onPasswordCheckChangeHandler","onNicknameChangeHandler","onTelNumberChangeHandler","onAddressChangeHandler","onAddressDetailChangeHandler","onPasswordCheckButtonClickHandler","onAddressButtonClickHandler","onNextButtonClickHandler","emailPattern","isEmailPattern","test","isCheckedPassword","trim","length","isEqualPassword","onSignUpButtonClickHandler","onSignInLinkClickHandler","onPasswordCheckKeyDownHandler","onNicknameKeyDownHandler","onTelNumberKeyDownHandler","onAddressKeyDownHandler","onAddressDetailKeyDownHandler","message","id","_c","$RefreshReg$"],"sources":["C:/Users/tbs03/Spring_react_mysql/react_board/board-front/src/views/Authentication/index.tsx"],"sourcesContent":["import React, { ChangeEvent, KeyboardEvent, useRef, useState } from 'react'\r\nimport './style.css';\r\nimport InputBox from 'components/InputBox';\r\nimport { SignInRequestDto } from 'apis/request/auth';\r\nimport { signInRequest } from 'apis';\r\nimport { SignInResponseDto } from 'apis/response/auth';\r\nimport { ResponseDto } from 'apis/response';\r\nimport { useCookies } from 'react-cookie';\r\nimport { MAIN_PATH } from 'constant';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\n\r\n//          component: 인증 화면 컴포넌트       //\r\nexport default function Authentication() {\r\n\r\n  //    state: 화면 상태    //\r\n  const [view, setView] = useState<'sign-in' | 'sign-up'>('sign-in');\r\n  \r\n  //    state : 쿠키 상태   //\r\n  const [cookies, setCookie] = useCookies();\r\n\r\n\r\n  //      function : 네비게이트 함수        //\r\n  const navigator = useNavigate();\r\n\r\n  //        component : sign in card 컴포넌트    //\r\n  const SignInCard = () => {\r\n    \r\n    //    state: 이메일 요소 참조 상태    //\r\n    const emailRef = useRef<HTMLInputElement | null>(null);\r\n    //    state: 패스워드 요소 참조 상태    //\r\n     const passwordRef = useRef<HTMLInputElement | null>(null);\r\n\r\n     \r\n\r\n    //    state: 이메일 상태    //\r\n    const [email, setEmail] = useState<string>('');\r\n    //    state : 패스워드 상태       //\r\n    const [password, setPassword] = useState<string>('');\r\n    //    state : 패스워드 타입 상태       //\r\n    const [passwordType, setPasswordType] = useState<'text' | 'password'>('password');\r\n    //    state : 패스워드 버튼 상태       //\r\n    const [passwordButtonIcon, setPasswordButtonIcon] = useState<'eye-light-off-icon' | 'eye-light-on-icon'>('eye-light-off-icon');\r\n    //    state : 에러 상태       //\r\n    const [error, setError] = useState<boolean>(false);\r\n\r\n    //    function : signInResponse 처리함수           //\r\n    const signInResponse = (responseBody: SignInResponseDto | ResponseDto | null) => {\r\n          if (!responseBody) {\r\n            alert('네트워크 이상입니다.');\r\n            return;\r\n          }\r\n          const { code } = responseBody;\r\n          if(code === 'DBE') alert('데이터베이스 오류입니다.');\r\n          if(code === 'VF' || code === 'SF') setError(true);\r\n          if(code !== 'SU') return ;\r\n          \r\n          const { token, expirationTime } = responseBody as SignInResponseDto;\r\n          const now = new Date().getTime();\r\n          const expires = new Date(now + expirationTime * 1000);\r\n\r\n          setCookie('accessToken', token, { expires, path: MAIN_PATH()});\r\n          navigator(MAIN_PATH());\r\n    }\r\n\r\n    //   event handler : 이메일 변경 이벤트 처리        //\r\n    const onEmailChangeHandler = (event: ChangeEvent<HTMLInputElement>) => {\r\n        setError(false);\r\n        const { value } = event.target;\r\n        setEmail(value);\r\n    }\r\n    \r\n    //  event handler : 비밀번호 변경 이벤트 처리\r\n    const onPasswordChangeHandler = (event: ChangeEvent<HTMLInputElement>) => {\r\n      setError(false);\r\n      const { value } = event.target;\r\n      setPassword(value);\r\n  }\r\n\r\n    //   event handler : 로그인 버튼 클릭 이벤트 처리    //\r\n    const onSignInButtonClickHandler = () => {\r\n      const requestBody: SignInRequestDto = { email, password};\r\n      signInRequest(requestBody).then(signInResponse);\r\n\r\n    }\r\n\r\n    //   event handler : 회원가입 버튼 클릭 이벤트 처리    //\r\n    const onSignUpLinkClickHandler = () => {\r\n        setView('sign-up');\r\n    }\r\n\r\n    //   event handler : 패스워드 버튼 클릭 이벤트 처리    //\r\n    const onPasswordButtonClickHandler = () => {\r\n     if(passwordType === 'text') {\r\n       setPasswordType('password');\r\n       setPasswordButtonIcon('eye-light-off-icon');\r\n     } else {\r\n       setPasswordType('text');\r\n       setPasswordButtonIcon('eye-light-on-icon')\r\n     }\r\n    }\r\n    //   event handler : 이메일 인풋 키 다운 이벤트 처리    //\r\n    const onEmailKeyDownHandler = (event:KeyboardEvent<HTMLInputElement>) => {\r\n       if(event.key !== 'Enter') return;\r\n       if(!passwordRef.current )  return;\r\n       passwordRef.current.focus();\r\n    }\r\n\r\n    //   event handler : 이메일 인풋 키 다운 이벤트 처리    //\r\n    const onPasswordKeyDownHandler = (event:KeyboardEvent<HTMLInputElement>) => {\r\n     if(event.key !== 'Enter') return;\r\n     onSignInButtonClickHandler();\r\n    \r\n  }\r\n\r\n\r\n    \r\n    //        render : sign up card 컴포넌트 렌더링 //\r\n    return (\r\n      <div className='auth-card'>\r\n        <div className='auth-card-box'>\r\n          <div className='auth-card-top'>\r\n            <div className='auth-card-title-box'>\r\n              <div className='auth-card-title'>{'로그인'}</div>\r\n            </div>\r\n            <InputBox ref={emailRef} label='이메일 주소' type='text' placeholder='이메일 주소를 입력해주세요.' error={error} value={email} onChange={onEmailChangeHandler} onKeyDown={onEmailKeyDownHandler} />\r\n            <InputBox ref={passwordRef} label='패스워드' type={passwordType} placeholder='비밀번호를 입력해주세요.' error={error} value={password} onChange={onPasswordChangeHandler} icon={passwordButtonIcon} onButtonClick={onPasswordButtonClickHandler} onKeyDown={onPasswordKeyDownHandler}/>\r\n          </div>\r\n          <div className='auth-card-bottom'>\r\n            {error && \r\n            \r\n            \r\n            <div className='auth-sign-in-error-box'>\r\n              <div className='auth-sign-in-error-message'>\r\n                {'이메일 주소 또는 비밀번호를 잘못 입력했습니다. \\n 입력하신 내용을 다시 확인해주세요.'}\r\n              </div>\r\n            </div>\r\n            }\r\n            <div className='black-large-full-button' onClick={onSignInButtonClickHandler}>{'로그인'}</div>\r\n            <div className='auth-description-box'>\r\n              <div className='auth-description'>{'신규 사용자이신가요?'}<span className='auth-description-link' onClick={onSignUpLinkClickHandler}>{'회원가입'}</span></div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n  const SignUpCard = () => {\r\n\r\n    //      state : 이메일 요소 참조 상태        //\r\n    const emailRef = useRef<HTMLInputElement | null >(null);\r\n    //      state : 패스워드 요소 참조 상태        //\r\n    const passwordRef = useRef<HTMLInputElement | null >(null);\r\n    //      state : 패스워드 확인 요소 참조 상태        //\r\n    const passwordCheckRef = useRef<HTMLInputElement | null >(null);\r\n    //      state : 닉네임 요소 참조 상태        //\r\n    const nicknameRef = useRef<HTMLInputElement | null >(null);\r\n    //      state : 휴대 전화번호 요소 참조 상태        //\r\n    const telNumberRef = useRef<HTMLInputElement | null >(null);\r\n     //      state : 주소 요소 참조 상태        //\r\n     const addressRef = useRef<HTMLInputElement | null >(null);\r\n     //      state : 상세주소 요소 참조 상태        //\r\n     const addressDetailRef = useRef<HTMLInputElement | null >(null);\r\n    \r\n\r\n    //      state : 페이지 번호 상태        //\r\n    const [page, setPage] = useState<1 | 2>(2);\r\n\r\n    //      state : 이메일 상태        //\r\n    const [email, setEmail] = useState<string>('');\r\n\r\n    //      state : 패스워드 상태        //\r\n    const [password, setPassword] = useState<string>('');\r\n\r\n    //      state : 패스워드 체크 상태        //\r\n    const [passwordCheck, setPasswordCheck] = useState<string>('');\r\n    //      state : 닉네임 상태               //\r\n    const [nickname, setNickname] = useState<string>('');\r\n    //      state : 핸드폰 번호 상태               //\r\n    const [telNumber, setTelNumber] = useState<string>('');\r\n    //      state : 주소 상태               //\r\n    const [address, setAddress] = useState<string>('');\r\n    //      state : 상세주소 상태               //\r\n    const [addressDetail, setAddressDetail] = useState<string>('');\r\n    \r\n\r\n    //      state : 패스워드 타입 상태        //\r\n    const [passwordType, setPasswordType] = useState<'text' | 'password'>('password');\r\n    //      state : 패스워드 체크 타입 상태        //\r\n    const [passwordCheckType, setPasswordCheckType] = useState<'text' | 'password'>('password');\r\n\r\n    //      state : 이메일 에러 상태        //\r\n    const [isEmailError, setEmailError] = useState<boolean>(false);\r\n\r\n    //      state : 패스워드 에러 상태        //\r\n    const [isPasswordError, setPasswordError] = useState<boolean>(false);\r\n\r\n    //      state : 패스워드 확인 에러 상태        //\r\n    const [isPasswordCheckError, setPasswordCheckError] = useState<boolean>(false);\r\n    //      state : 닉네임 에러 상태        //\r\n    const [isNicknameError, setsNicknameError] = useState<boolean>(false);\r\n    //      state : 핸드폰 번호 에러 상태        //\r\n    const [isTelNumberError, setTelNumberError] = useState<boolean>(false);\r\n    //      state : 주소 에러 상태        //\r\n    const [isAddressError, setAddressError] = useState<boolean>(false);\r\n\r\n    //      state :이메일 에러 메세지 상태        //\r\n    const [emailErrorMessage, setEmailErrorMessage] = useState<string>('');\r\n\r\n    //      state :패스워드 에러 메세지 상태        //\r\n    const [passwordErrorMessage, setPasswordErrorMessage] = useState<string>('');\r\n\r\n    //      state :패스워드 확인 에러 메세지 상태        //\r\n    const [passwordCheckErrorMessage, setPasswordCheckErrorMessage] = useState<string>('');\r\n\r\n    //      state : 닉네임  에러 메세지 상태        //\r\n    const [nicknameErrorMessage, setNciknameErrorMessage] = useState<string>('');\r\n    //      state : 핸드폰 번호  에러 메세지 상태        //\r\n    const [telNumberErrorMessage, setTelNumbeErrorMessage] = useState<string>('');\r\n    //      state : 주소  에러 메세지 상태        //\r\n    const [addressErrorMessage, setAddressErrorMessage] = useState<string>('');\r\n\r\n    //      state : 패스워드 버튼 아이콘 상태         //\r\n    const [passwordButtonIcon, setPasswordButtonIcon] = useState<'eye-light-off-icon' | 'eye-light-on-icon'>('eye-light-off-icon');\r\n\r\n     //      state : 패스워드 버튼 아이콘 상태         //\r\n    const [passwordCheckButtonIcon, setPasswordCheckButtonIcon] = useState<'eye-light-off-icon' | 'eye-light-on-icon'>('eye-light-off-icon');\r\n\r\n    // event handler :  이메일 변경 이벤트 처리       //\r\n    const onEmailChangeHandler = (event:ChangeEvent<HTMLInputElement>) => {\r\n      const { value } = event.target;\r\n      setEmail(value);\r\n    }\r\n\r\n    // event handler :  패스워드 변경 이벤트 처리       //\r\n    const onPasswordChangeHandler = (event:ChangeEvent<HTMLInputElement>) => {\r\n      const { value } = event.target;\r\n      setPassword(value);\r\n    }\r\n\r\n    // event handler :  패스워드 확인 변경 이벤트 처리       //\r\n    const onPasswordCheckChangeHandler = (event:ChangeEvent<HTMLInputElement>) => {\r\n      const { value } = event.target;\r\n      setPasswordCheck(value);\r\n    }\r\n     // event handler : 닉네임 변경 이벤트 처리       //\r\n     const onNicknameChangeHandler = (event:ChangeEvent<HTMLInputElement>) => {\r\n      const { value } = event.target;\r\n      setNickname(value);\r\n    }\r\n      // event handler : 핸드폰 번호 변경 이벤트 처리       //\r\n      const onTelNumberChangeHandler = (event:ChangeEvent<HTMLInputElement>) => {\r\n        const { value } = event.target;\r\n        setTelNumber(value);\r\n      }\r\n       // event handler : 주소 변경 이벤트 처리       //\r\n       const onAddressChangeHandler = (event:ChangeEvent<HTMLInputElement>) => {\r\n        const { value } = event.target;\r\n        setAddress(value);\r\n      }\r\n       // event handler : 주소 변경 이벤트 처리       //\r\n       const onAddressDetailChangeHandler = (event:ChangeEvent<HTMLInputElement>) => {\r\n        const { value } = event.target;\r\n        setAddressDetail(value);\r\n      }\r\n\r\n    // event handler : 패스워드 버튼 클릭 이벤트 처리       //\r\n    const onPasswordButtonClickHandler = () => {\r\n      if ( passwordButtonIcon === 'eye-light-off-icon') {\r\n        setPasswordButtonIcon('eye-light-on-icon');\r\n        setPasswordType('text');\r\n      }\r\n      else {\r\n        setPasswordButtonIcon('eye-light-off-icon');\r\n        setPasswordType('password');\r\n\r\n      }\r\n    }\r\n     // event handler : 패스워드 버튼 클릭 이벤트 처리       //\r\n     const onPasswordCheckButtonClickHandler = () => {\r\n      if ( passwordButtonIcon === 'eye-light-off-icon') {\r\n        setPasswordCheckButtonIcon('eye-light-on-icon');\r\n        setPasswordCheckType('text');\r\n      }\r\n      else {\r\n        setPasswordCheckButtonIcon('eye-light-off-icon');\r\n        setPasswordCheckType('password');\r\n\r\n      }\r\n    }\r\n    // event handler : 주소 버튼 클릭 이벤트 처리       //\r\n    const onAddressButtonClickHandler = () => {\r\n\r\n    }\r\n\r\n    //  event handler : 다음 단계 버튼 클릭 이벤트 처리 //\r\n    const onNextButtonClickHandler = () => {\r\n      const emailPattern = /^[a-zA-Z0-9]*@([-.]?[a-zA-Z0-9])*\\.[a-zA-Z]{2,4}$/;\r\n      const isEmailPattern = emailPattern.test(email);\r\n      if(!isEmailPattern) {\r\n        setEmailError(true);\r\n        setEmailErrorMessage('이메일 주소 포맷이 맞지 않습니다.')\r\n      }\r\n    const isCheckedPassword = password.trim().length > 8\r\n      if(isCheckedPassword) {\r\n        setPasswordError(true);\r\n        setPasswordErrorMessage('비밀번호는 8자 이상 입력해주세요.');\r\n      }\r\n    const isEqualPassword = password === passwordCheck;\r\n    if(isEqualPassword) {\r\n      setPasswordCheckError(true);\r\n      setPasswordCheckErrorMessage('비밀번호가 일치하지 않습니다.');\r\n    }\r\n    if(!isEmailPattern || !isCheckedPassword || !isEqualPassword) return;\r\n      setPage(2);\r\n    }\r\n\r\n    // event handler : 회원가입 버튼 클릭 이벤트 처리   //\r\n    const onSignUpButtonClickHandler = () => {\r\n\r\n    }\r\n\r\n    // event handler : 로그인 링크 클릭 이벤트 처리     //\r\n    const onSignInLinkClickHandler = () => {\r\n      setView('sign-in');\r\n    }\r\n\r\n    //  event handler : 이메일 키 다운 이벤트 처리      //\r\n    const onEmailKeyDownHandler = (event: KeyboardEvent<HTMLInputElement>) => {\r\n      if(event.key ! == 'Enter') return;\r\n      if(!passwordRef.current) return;\r\n      passwordRef.current.focus();\r\n    }\r\n\r\n    //  event handler : 이메일 키 다운 이벤트 처리      //\r\n    const onPasswordKeyDownHandler = (event: KeyboardEvent<HTMLInputElement>) => {\r\n      if(event.key ! == 'Enter') return;\r\n      if(!passwordCheckRef.current) return;\r\n      passwordCheckRef.current.focus();\r\n    }\r\n\r\n    //  event handler : 패스워드 확인 키 다운 이벤트 처리      //\r\n    const onPasswordCheckKeyDownHandler = (event: KeyboardEvent<HTMLInputElement>) => {\r\n      if(event.key ! == 'Enter') return;\r\n      onNextButtonClickHandler();\r\n    }\r\n    //  event handler : 닉네임 키 다운 이벤트 처리      //\r\n    const onNicknameKeyDownHandler = (event: KeyboardEvent<HTMLInputElement>) => {\r\n      if(event.key ! == 'Enter') return;\r\n     \r\n    }\r\n    //  event handler : 휴대폰 번호 키 다운 이벤트 처리      //\r\n    const onTelNumberKeyDownHandler = (event: KeyboardEvent<HTMLInputElement>) => {\r\n      if(event.key ! == 'Enter') return;\r\n      \r\n    }\r\n    //  event handler : 주소 키 다운 이벤트 처리      //\r\n    const onAddressKeyDownHandler = (event: KeyboardEvent<HTMLInputElement>) => {\r\n      if(event.key ! == 'Enter') return;\r\n      \r\n    }\r\n    //  event handler : 상세 주소 키 다운 이벤트 처리      //\r\n    const onAddressDetailKeyDownHandler = (event: KeyboardEvent<HTMLInputElement>) => {\r\n      if(event.key ! == 'Enter') return;\r\n     \r\n    }\r\n    \r\n\r\n    \r\n    //      render : sign up card 컴포넌트 렌더링     //\r\n\r\n    return (\r\n      <div className='auth-card'>\r\n        <div className='auth-card-box'>\r\n          <div className='auth-card-top'>\r\n            <div className='auth-card-title-box'>\r\n              <div className='auth-card-title'>{'회원가입'}</div>\r\n              <div className='auth-card-page'>{`${page}/2`}</div>\r\n            </div>\r\n            {page === 1 && (\r\n              <>\r\n            <InputBox ref={emailRef} label='이메일 주소*' type='text' placeholder='이메일 주소를 입력해주세요' value={email} onChange={onEmailChangeHandler} error={isEmailError} message={emailErrorMessage} onKeyDown={onEmailKeyDownHandler}/>\r\n            <InputBox ref={passwordRef} label='비밀번호*' type={passwordType} placeholder='비밀번호를 입력해주세요' value={password} onChange={onPasswordChangeHandler} error={isPasswordError} message={passwordErrorMessage} icon={passwordButtonIcon} onButtonClick={onPasswordButtonClickHandler} onKeyDown={onPasswordKeyDownHandler} />\r\n            <InputBox ref={passwordCheckRef} label='비밀번호 확인*' type={passwordCheckType} placeholder='비밀번호를 다시 입력해주세요' value={passwordCheck} onChange={onPasswordCheckChangeHandler} error={isPasswordCheckError} message={passwordCheckErrorMessage} icon={passwordCheckButtonIcon} onButtonClick={onPasswordCheckButtonClickHandler} onKeyDown={onPasswordCheckKeyDownHandler}/>\r\n             </>\r\n            )}\r\n            {page === 2 && (\r\n              <>\r\n              <InputBox ref={nicknameRef} label='닉네임*' type='text' placeholder='닉네임을 입력해주세요' value={nickname} onChange={onNicknameChangeHandler} error={isNicknameError} message={nicknameErrorMessage} onKeyDown={onNicknameKeyDownHandler}/>\r\n              <InputBox ref={telNumberRef} label='휴대폰 번호' type='text' placeholder='휴대폰 번호를 입력해주세요'value={telNumber} onChange={onTelNumberChangeHandler} error={isTelNumberError} message={telNumberErrorMessage} onKeyDown={onTelNumberKeyDownHandler}/>\r\n              <InputBox ref={addressRef} label='주소*' type='text' placeholder='우편번호 찾기'value={address} onChange={onAddressChangeHandler} error={isAddressError} message={addressErrorMessage} icon='expand-right-light-icon' onButtonClick={onAddressButtonClickHandler} onKeyDown={onAddressKeyDownHandler}/>\r\n              <InputBox ref={addressDetailRef} label='상세 주소' type='text' placeholder='상세 주소를 입력해주세요.' value={addressDetail} onChange={onAddressDetailChangeHandler} error={false} onKeyDown={onAddressDetailKeyDownHandler}/>\r\n              </>\r\n\r\n            )}\r\n             </div>\r\n          <div className='auth-card-bottom'>\r\n            {page === 1 && (\r\n               <div className='black-large-full-button' onClick={onNextButtonClickHandler}>{'다음 단계'}</div>\r\n            )}\r\n            {page === 2 && (\r\n              <>\r\n              <div className='auth-consent-box'>\r\n                <div className='auth-check-box'>\r\n                  <div className='check-ring-light-icon'></div>\r\n                </div>\r\n                <div className='auth-consent-title'>{'개인정보 동의'}</div>\r\n                <div className='auth-consent-link'>{'더보기 >'}</div>\r\n              </div>\r\n              <div className='black-large-full-button' onClick={onSignUpButtonClickHandler}>{'회원가입'}</div>\r\n              </>\r\n            )}\r\n           \r\n            <div className='auth-description-box'>\r\n            <div className='auth-description'>{'이미 계정이 있으신가요? '}<span className='auth-description-link' onClick={onSignInLinkClickHandler}>{'로그인'}</span></div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n\r\n  };\r\n//          render : 컴포넌트 렌더링            //    \r\n  return (\r\n    <div id='auth-wrapper'>\r\n        <div className='auth-container'>\r\n          <div className='auth-jumbotron-box'>\r\n              <div className='auth-jumbotron-contents'>\r\n                  <div className='auth-logo-icon'> </div>\r\n                  <div className='auth-jumbotron-text-box'> \r\n                    <div className='auth-jumbotron-text'>{'환영합니다'}</div>  \r\n                    <div className='auth-jumbotron-text'>{'HOONS BOARD 입니다'}</div>  \r\n                  </div>\r\n              </div>\r\n          </div>\r\n          \r\n          {view === 'sign-in' && <SignInCard />}\r\n          {view === 'sign-up' && <SignUpCard />}\r\n        </div>\r\n    </div>\r\n  )\r\n\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}