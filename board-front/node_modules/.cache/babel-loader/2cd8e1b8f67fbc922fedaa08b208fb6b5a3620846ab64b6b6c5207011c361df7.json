{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tbs03\\\\Spring_react_mysql\\\\react_board\\\\board-front\\\\src\\\\views\\\\Authentication\\\\index.tsx\",\n  _s3 = $RefreshSig$();\nimport React, { useRef, useState } from 'react';\nimport './style.css';\nimport InputBox from 'components/InputBox';\nimport { signInRequest, signUpReqeust } from 'apis';\nimport { useCookies } from 'react-cookie';\nimport { MAIN_PATH } from 'constant';\nimport { useNavigate } from 'react-router-dom';\nimport { useDaumPostcodePopup } from 'react-daum-postcode';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n//          component: 인증 화면 컴포넌트       //\nexport default function Authentication() {\n  _s3();\n  var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n  //    state: 화면 상태    //\n  const [view, setView] = useState('sign-in');\n\n  //    state : 쿠키 상태   //\n  const [cookies, setCookie] = useCookies();\n\n  //      function : 네비게이트 함수        //\n  const navigator = useNavigate();\n\n  //        component : sign in card 컴포넌트    //\n  const SignInCard = () => {\n    _s();\n    //    state: 이메일 요소 참조 상태    //\n    const emailRef = useRef(null);\n    //    state: 패스워드 요소 참조 상태    //\n    const passwordRef = useRef(null);\n\n    //    state: 이메일 상태    //\n    const [email, setEmail] = useState('');\n    //    state : 패스워드 상태       //\n    const [password, setPassword] = useState('');\n    //    state : 패스워드 타입 상태       //\n    const [passwordType, setPasswordType] = useState('password');\n    //    state : 패스워드 버튼 상태       //\n    const [passwordButtonIcon, setPasswordButtonIcon] = useState('eye-light-off-icon');\n    //    state : 에러 상태       //\n    const [error, setError] = useState(false);\n\n    //    function : signInResponse 처리함수           //\n    const signUpResponse = responseBody => {\n      if (!responseBody) {\n        alert('네트워크 이상입니다.');\n        return;\n      }\n      const {\n        code\n      } = responseBody;\n      if (code === 'DBE') alert('데이터베이스 오류입니다.');\n      if (code === 'VF' || code === 'SF') setError(true);\n      if (code !== 'SU') return;\n      const {\n        token,\n        expirationTime\n      } = responseBody;\n      const now = new Date().getTime();\n      const expires = new Date(now + expirationTime * 1000);\n      setCookie('accessToken', token, {\n        expires,\n        path: MAIN_PATH()\n      });\n      navigator(MAIN_PATH());\n    };\n\n    //   event handler : 이메일 변경 이벤트 처리        //\n    const onEmailChangeHandler = event => {\n      setError(false);\n      const {\n        value\n      } = event.target;\n      setEmail(value);\n    };\n\n    //  event handler : 비밀번호 변경 이벤트 처리\n    const onPasswordChangeHandler = event => {\n      setError(false);\n      const {\n        value\n      } = event.target;\n      setPassword(value);\n    };\n\n    //   event handler : 로그인 버튼 클릭 이벤트 처리    //\n    const onSignInButtonClickHandler = () => {\n      const requestBody = {\n        email,\n        password\n      };\n      signInRequest(requestBody).then(signInResponse);\n    };\n\n    //   event handler : 회원가입 버튼 클릭 이벤트 처리    //\n    const onSignUpLinkClickHandler = () => {\n      setView('sign-up');\n    };\n\n    //   event handler : 패스워드 버튼 클릭 이벤트 처리    //\n    const onPasswordButtonClickHandler = () => {\n      if (passwordType === 'text') {\n        setPasswordType('password');\n        setPasswordButtonIcon('eye-light-off-icon');\n      } else {\n        setPasswordType('text');\n        setPasswordButtonIcon('eye-light-on-icon');\n      }\n    };\n    //   event handler : 이메일 인풋 키 다운 이벤트 처리    //\n    const onEmailKeyDownHandler = event => {\n      if (event.key !== 'Enter') return;\n      if (!passwordRef.current) return;\n      passwordRef.current.focus();\n    };\n\n    //   event handler : 이메일 인풋 키 다운 이벤트 처리    //\n    const onPasswordKeyDownHandler = event => {\n      if (event.key !== 'Enter') return;\n      onSignInButtonClickHandler();\n    };\n\n    //        render : sign up card 컴포넌트 렌더링 //\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auth-card\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"auth-card-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"auth-card-top\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"auth-card-title-box\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"auth-card-title\",\n              children: '로그인'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(InputBox, {\n            ref: emailRef,\n            label: \"\\uC774\\uBA54\\uC77C \\uC8FC\\uC18C\",\n            type: \"text\",\n            placeholder: \"\\uC774\\uBA54\\uC77C \\uC8FC\\uC18C\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694.\",\n            error: error,\n            value: email,\n            onChange: onEmailChangeHandler,\n            onKeyDown: onEmailKeyDownHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(InputBox, {\n            ref: passwordRef,\n            label: \"\\uD328\\uC2A4\\uC6CC\\uB4DC\",\n            type: passwordType,\n            placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694.\",\n            error: error,\n            value: password,\n            onChange: onPasswordChangeHandler,\n            icon: passwordButtonIcon,\n            onButtonClick: onPasswordButtonClickHandler,\n            onKeyDown: onPasswordKeyDownHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"auth-card-bottom\",\n          children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"auth-sign-in-error-box\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"auth-sign-in-error-message\",\n              children: '이메일 주소 또는 비밀번호를 잘못 입력했습니다. \\n 입력하신 내용을 다시 확인해주세요.'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"black-large-full-button\",\n            onClick: onSignInButtonClickHandler,\n            children: '로그인'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"auth-description-box\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"auth-description\",\n              children: ['신규 사용자이신가요?', /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"auth-description-link\",\n                onClick: onSignUpLinkClickHandler,\n                children: '회원가입'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 64\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this);\n  };\n  _s(SignInCard, \"+MankW9kCs+nZSw2btqK0txeSEY=\");\n  const SignUpCard = () => {\n    _s2();\n    //      state : 이메일 요소 참조 상태        //\n    const emailRef = useRef(null);\n    //      state : 패스워드 요소 참조 상태        //\n    const passwordRef = useRef(null);\n    //      state : 패스워드 확인 요소 참조 상태        //\n    const passwordCheckRef = useRef(null);\n    //      state : 닉네임 요소 참조 상태        //\n    const nicknameRef = useRef(null);\n    //      state : 휴대 전화번호 요소 참조 상태        //\n    const telNumberRef = useRef(null);\n    //      state : 주소 요소 참조 상태        //\n    const addressRef = useRef(null);\n    //      state : 상세주소 요소 참조 상태        //\n    const addressDetailRef = useRef(null);\n\n    //      state : 페이지 번호 상태        //\n    const [page, setPage] = useState(2);\n\n    //      state : 이메일 상태        //\n    const [email, setEmail] = useState('');\n\n    //      state : 패스워드 상태        //\n    const [password, setPassword] = useState('');\n\n    //      state : 패스워드 체크 상태        //\n    const [passwordCheck, setPasswordCheck] = useState('');\n    //      state : 닉네임 상태               //\n    const [nickname, setNickname] = useState('');\n    //      state : 핸드폰 번호 상태               //\n    const [telNumber, setTelNumber] = useState('');\n    //      state : 주소 상태               //\n    const [address, setAddress] = useState('');\n    //      state : 상세주소 상태               //\n    const [addressDetail, setAddressDetail] = useState('');\n    //      state : 개인 정보 동의 상태         //\n    const [agreedPersonal, setAgreedPersonal] = useState(false);\n\n    //      state : 패스워드 타입 상태        //\n    const [passwordType, setPasswordType] = useState('password');\n    //      state : 패스워드 체크 타입 상태        //\n    const [passwordCheckType, setPasswordCheckType] = useState('password');\n\n    //      state : 이메일 에러 상태        //\n    const [isEmailError, setEmailError] = useState(false);\n\n    //      state : 패스워드 에러 상태        //\n    const [isPasswordError, setPasswordError] = useState(false);\n\n    //      state : 패스워드 확인 에러 상태        //\n    const [isPasswordCheckError, setPasswordCheckError] = useState(false);\n    //      state : 닉네임 에러 상태        //\n    const [isNicknameError, setNicknameError] = useState(false);\n    //      state : 핸드폰 번호 에러 상태        //\n    const [isTelNumberError, setTelNumberError] = useState(false);\n    //      state : 주소 에러 상태        //\n    const [isAddressError, setAddressError] = useState(false);\n    //      state : 개인 정보 동의 에러 상태 //\n    const [isAgreedPersonalError, setAgreedPersonalError] = useState(false);\n\n    //      state :이메일 에러 메세지 상태        //\n    const [emailErrorMessage, setEmailErrorMessage] = useState('');\n\n    //      state :패스워드 에러 메세지 상태        //\n    const [passwordErrorMessage, setPasswordErrorMessage] = useState('');\n\n    //      state :패스워드 확인 에러 메세지 상태        //\n    const [passwordCheckErrorMessage, setPasswordCheckErrorMessage] = useState('');\n\n    //      state : 닉네임  에러 메세지 상태        //\n    const [nicknameErrorMessage, setNicknameErrorMessage] = useState('');\n    //      state : 핸드폰 번호  에러 메세지 상태        //\n    const [telNumberErrorMessage, setTelNumberErrorMessage] = useState('');\n    //      state : 주소  에러 메세지 상태        //\n    const [addressErrorMessage, setAddressErrorMessage] = useState('');\n\n    //      state : 패스워드 버튼 아이콘 상태         //\n    const [passwordButtonIcon, setPasswordButtonIcon] = useState('eye-light-off-icon');\n\n    //      state : 패스워드 버튼 아이콘 상태         //\n    const [passwordCheckButtonIcon, setPasswordCheckButtonIcon] = useState('eye-light-off-icon');\n\n    // function : 다음 주소 검색 팝업 오픈 함수            //\n    const open = useDaumPostcodePopup();\n\n    // function : sign Up response          //\n    const signUpResponse = responseBody => {\n      if (!responseBody) {\n        alert('네트워크 이상입니다.');\n        return;\n      }\n      const {\n        code\n      } = responseBody;\n      if (code === 'DE') {\n        setEmailError(true);\n        setEmailErrorMessage('중복되는 이메일 메시지 입니다.');\n      }\n      if (code === 'DN') {\n        setNicknameError(true);\n        setNicknameErrorMessage('중복되는 닉네임 입니다.');\n      }\n      if (code === 'DT') {\n        setTelNumberError(true);\n        setTelNumberErrorMessage('중복되는 핸드폰 번호 입니다.');\n      }\n      if (code === 'VF') alert('모든 값을 입력하세요');\n      if (code === 'DBE') alert('데이터 입력 오류입니다.');\n      if (code !== 'SU') return;\n      setView('sign-in');\n    };\n\n    // event handler :  이메일 변경 이벤트 처리       //\n    const onEmailChangeHandler = event => {\n      const {\n        value\n      } = event.target;\n      setEmail(value);\n      setEmailError(false);\n      setEmailErrorMessage('');\n    };\n\n    // event handler :  패스워드 변경 이벤트 처리       //\n    const onPasswordChangeHandler = event => {\n      const {\n        value\n      } = event.target;\n      setPassword(value);\n      setPasswordError(false);\n      setPasswordErrorMessage('');\n    };\n\n    // event handler :  패스워드 확인 변경 이벤트 처리       //\n    const onPasswordCheckChangeHandler = event => {\n      const {\n        value\n      } = event.target;\n      setPasswordCheck(value);\n      setPasswordCheckError(false);\n      setPasswordCheckErrorMessage('');\n    };\n    // event handler : 닉네임 변경 이벤트 처리       //\n    const onNicknameChangeHandler = event => {\n      const {\n        value\n      } = event.target;\n      setNickname(value);\n      setNicknameError(false);\n      setNicknameErrorMessage('');\n    };\n    // event handler : 핸드폰 번호 변경 이벤트 처리       //\n    const onTelNumberChangeHandler = event => {\n      const {\n        value\n      } = event.target;\n      setTelNumber(value);\n      setTelNumberError(false);\n      setTelNumberErrorMessage('');\n    };\n    // event handler : 주소 변경 이벤트 처리       //\n    const onAddressChangeHandler = event => {\n      const {\n        value\n      } = event.target;\n      setAddress(value);\n      setAddressError(false);\n      setAddressErrorMessage('');\n    };\n    // event handler : 상세 주소 변경 이벤트 처리       //\n    const onAddressDetailChangeHandler = event => {\n      const {\n        value\n      } = event.target;\n      setAddressDetail(value);\n    };\n    // event handler : 개인 정보 클릭 이벤트 처리         //\n    const onAgreedPersonalClickHandler = () => {\n      setAgreedPersonal(!agreedPersonal);\n      setAgreedPersonalError(false);\n    };\n\n    // event handler : 패스워드 버튼 클릭 이벤트 처리       //\n    const onPasswordButtonClickHandler = () => {\n      if (passwordButtonIcon === 'eye-light-off-icon') {\n        setPasswordButtonIcon('eye-light-on-icon');\n        setPasswordType('text');\n      } else {\n        setPasswordButtonIcon('eye-light-off-icon');\n        setPasswordType('password');\n      }\n    };\n    // event handler : 패스워드 버튼 클릭 이벤트 처리       //\n    const onPasswordCheckButtonClickHandler = () => {\n      if (passwordButtonIcon === 'eye-light-off-icon') {\n        setPasswordCheckButtonIcon('eye-light-on-icon');\n        setPasswordCheckType('text');\n      } else {\n        setPasswordCheckButtonIcon('eye-light-off-icon');\n        setPasswordCheckType('password');\n      }\n    };\n    // event handler : 주소 버튼 클릭 이벤트 처리       //\n    const onAddressButtonClickHandler = () => {\n      open({\n        onComplete\n      });\n    };\n\n    //  event handler : 다음 단계 버튼 클릭 이벤트 처리 //\n    const onNextButtonClickHandler = () => {\n      const emailPattern = /^[a-zA-Z0-9]*@([-.]?[a-zA-Z0-9])*\\.[a-zA-Z]{2,4}$/;\n      const isEmailPattern = emailPattern.test(email);\n      if (!isEmailPattern) {\n        setEmailError(true);\n        setEmailErrorMessage('이메일 주소 포맷이 맞지 않습니다.');\n      }\n      const isCheckedPassword = password.trim().length > 8;\n      if (isCheckedPassword) {\n        setPasswordError(true);\n        setPasswordErrorMessage('비밀번호는 8자 이상 입력해주세요.');\n      }\n      const isEqualPassword = password === passwordCheck;\n      if (isEqualPassword) {\n        setPasswordCheckError(true);\n        setPasswordCheckErrorMessage('비밀번호가 일치하지 않습니다.');\n      }\n      if (!isEmailPattern || !isCheckedPassword || !isEqualPassword) return;\n      setPage(2);\n    };\n\n    // event handler : 회원가입 버튼 클릭 이벤트 처리   //\n    const onSignUpButtonClickHandler = () => {\n      const emailPattern = /^[a-zA-Z0-9]*@([-.]?[a-zA-Z0-9])*\\.[a-zA-Z]{2,4}$/;\n      const isEmailPattern = emailPattern.test(email);\n      if (!isEmailPattern) {\n        setEmailError(true);\n        setEmailErrorMessage('이메일 주소 포맷이 맞지 않습니다.');\n      }\n      const isCheckedPassword = password.trim().length > 8;\n      if (isCheckedPassword) {\n        setPasswordError(true);\n        setPasswordErrorMessage('비밀번호는 8자 이상 입력해주세요.');\n      }\n      const isEqualPassword = password === passwordCheck;\n      if (isEqualPassword) {\n        setPasswordCheckError(true);\n        setPasswordCheckErrorMessage('비밀번호가 일치하지 않습니다.');\n      }\n      if (!isEmailPattern || !isCheckedPassword || !isEqualPassword) {\n        setPage(1);\n        return;\n      }\n      const hasNickname = nickname.trim().length !== 0;\n      if (!hasNickname) {\n        setNicknameError(true);\n        setNicknameErrorMessage('닉네임을 입력해주세요.');\n      }\n      const telNumberPattern = /^[0-9]{11,13}$/;\n      const isTelNumberPattern = telNumberPattern.test(telNumber);\n      if (!isTelNumberPattern) {\n        setTelNumberError(true);\n        setTelNumberErrorMessage('숫자만 입력해주세요');\n      }\n      const hasAddress = address.trim().length > 0;\n      if (!hasAddress) {\n        setAddressError(true);\n        setAddressErrorMessage('주소를 입력해주세요');\n      }\n      if (!agreedPersonal) setAgreedPersonalError(true);\n      if (!hasNickname || !isTelNumberPattern || !agreedPersonal) return;\n      const requestBody = {\n        email,\n        password,\n        nickname,\n        telNumber,\n        address,\n        addressDetail,\n        agreedPersonal\n      };\n      signUpReqeust(requestBody).then(signUpResponse);\n    };\n\n    // event handler : 로그인 링크 클릭 이벤트 처리     //\n    const onSignInLinkClickHandler = () => {\n      setView('sign-in');\n    };\n\n    //  event handler : 이메일 키 다운 이벤트 처리      //\n    const onEmailKeyDownHandler = event => {\n      if (event.key == 'Enter') return;\n      if (!passwordRef.current) return;\n      passwordRef.current.focus();\n    };\n\n    //  event handler : 이메일 키 다운 이벤트 처리      //\n    const onPasswordKeyDownHandler = event => {\n      if (event.key == 'Enter') return;\n      if (!passwordCheckRef.current) return;\n      passwordCheckRef.current.focus();\n    };\n\n    //  event handler : 패스워드 확인 키 다운 이벤트 처리      //\n    const onPasswordCheckKeyDownHandler = event => {\n      if (event.key == 'Enter') return;\n      if (!nicknameRef.current) return;\n      onNextButtonClickHandler();\n      nicknameRef.current.focus();\n    };\n    //  event handler : 닉네임 키 다운 이벤트 처리      //\n    const onNicknameKeyDownHandler = event => {\n      if (event.key == 'Enter') return;\n      if (!telNumberRef.current) return;\n      telNumberRef.current.focus();\n    };\n    //  event handler : 휴대폰 번호 키 다운 이벤트 처리      //\n    const onTelNumberKeyDownHandler = event => {\n      if (event.key == 'Enter') return;\n      onAddressButtonClickHandler();\n    };\n    //  event handler : 주소 키 다운 이벤트 처리      //\n    const onAddressKeyDownHandler = event => {\n      if (event.key == 'Enter') return;\n      if (!addressDetailRef.current) return;\n      addressDetailRef.current.focus();\n    };\n    //  event handler : 상세 주소 키 다운 이벤트 처리      //\n    const onAddressDetailKeyDownHandler = event => {\n      if (event.key == 'Enter') return;\n      onSignUpButtonClickHandler();\n    };\n\n    //  event handler : 다음 주소 검색 완료 이벤트 처리   //\n    const onComplete = data => {\n      const {\n        address\n      } = data;\n      setAddress(address);\n      if (!addressDetailRef.current) return;\n      addressDetailRef.current.focus();\n    };\n\n    //      render : sign up card 컴포넌트 렌더링     //\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auth-card\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"auth-card-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"auth-card-top\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"auth-card-title-box\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"auth-card-title\",\n              children: '회원가입'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 498,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"auth-card-page\",\n              children: `${page}/2`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 499,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 497,\n            columnNumber: 13\n          }, this), page === 1 && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(InputBox, {\n              ref: emailRef,\n              label: \"\\uC774\\uBA54\\uC77C \\uC8FC\\uC18C*\",\n              type: \"text\",\n              placeholder: \"\\uC774\\uBA54\\uC77C \\uC8FC\\uC18C\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\",\n              value: email,\n              onChange: onEmailChangeHandler,\n              error: isEmailError,\n              message: emailErrorMessage,\n              onKeyDown: onEmailKeyDownHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 503,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(InputBox, {\n              ref: passwordRef,\n              label: \"\\uBE44\\uBC00\\uBC88\\uD638*\",\n              type: passwordType,\n              placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\",\n              value: password,\n              onChange: onPasswordChangeHandler,\n              error: isPasswordError,\n              message: passwordErrorMessage,\n              icon: passwordButtonIcon,\n              onButtonClick: onPasswordButtonClickHandler,\n              onKeyDown: onPasswordKeyDownHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 504,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(InputBox, {\n              ref: passwordCheckRef,\n              label: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uD655\\uC778*\",\n              type: passwordCheckType,\n              placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\\uB97C \\uB2E4\\uC2DC \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\",\n              value: passwordCheck,\n              onChange: onPasswordCheckChangeHandler,\n              error: isPasswordCheckError,\n              message: passwordCheckErrorMessage,\n              icon: passwordCheckButtonIcon,\n              onButtonClick: onPasswordCheckButtonClickHandler,\n              onKeyDown: onPasswordCheckKeyDownHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 505,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true), page === 2 && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(InputBox, {\n              ref: nicknameRef,\n              label: \"\\uB2C9\\uB124\\uC784*\",\n              type: \"text\",\n              placeholder: \"\\uB2C9\\uB124\\uC784\\uC744 \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\",\n              value: nickname,\n              onChange: onNicknameChangeHandler,\n              error: isNicknameError,\n              message: nicknameErrorMessage,\n              onKeyDown: onNicknameKeyDownHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 510,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(InputBox, {\n              ref: telNumberRef,\n              label: \"\\uD734\\uB300\\uD3F0 \\uBC88\\uD638\",\n              type: \"text\",\n              placeholder: \"\\uD734\\uB300\\uD3F0 \\uBC88\\uD638\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\",\n              value: telNumber,\n              onChange: onTelNumberChangeHandler,\n              error: isTelNumberError,\n              message: telNumberErrorMessage,\n              onKeyDown: onTelNumberKeyDownHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 511,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(InputBox, {\n              ref: addressRef,\n              label: \"\\uC8FC\\uC18C*\",\n              type: \"text\",\n              placeholder: \"\\uC6B0\\uD3B8\\uBC88\\uD638 \\uCC3E\\uAE30\",\n              value: address,\n              onChange: onAddressChangeHandler,\n              error: isAddressError,\n              message: addressErrorMessage,\n              icon: \"expand-right-light-icon\",\n              onButtonClick: onAddressButtonClickHandler,\n              onKeyDown: onAddressKeyDownHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 512,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(InputBox, {\n              ref: addressDetailRef,\n              label: \"\\uC0C1\\uC138 \\uC8FC\\uC18C\",\n              type: \"text\",\n              placeholder: \"\\uC0C1\\uC138 \\uC8FC\\uC18C\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694.\",\n              value: addressDetail,\n              onChange: onAddressDetailChangeHandler,\n              error: false,\n              onKeyDown: onAddressDetailKeyDownHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 513,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 496,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"auth-card-bottom\",\n          children: [page === 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"black-large-full-button\",\n            onClick: onNextButtonClickHandler,\n            children: '다음 단계'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 520,\n            columnNumber: 16\n          }, this), page === 2 && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"auth-consent-box\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"auth-check-box\",\n                onClick: onAgreedPersonalClickHandler,\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `icon ${agreedPersonal ? 'check-round-fill-icon' : 'check-ring-light-icon'}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 526,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 525,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: isAgreedPersonalError ? 'auth-consent-title-error' : 'auth-consent-title',\n                children: '개인정보 동의'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 528,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"auth-consent-link\",\n                children: '더보기 >'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 529,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 524,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"black-large-full-button\",\n              onClick: onSignUpButtonClickHandler,\n              children: '회원가입'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 531,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"auth-description-box\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"auth-description\",\n              children: ['이미 계정이 있으신가요? ', /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"auth-description-link\",\n                onClick: onSignInLinkClickHandler,\n                children: '로그인'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 536,\n                columnNumber: 65\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 536,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 535,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 518,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 495,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 494,\n      columnNumber: 7\n    }, this);\n  };\n  //          render : 컴포넌트 렌더링            //    \n  _s2(SignUpCard, \"OVadGmdFeISllo/6LUD1AOX5cqQ=\", false, function () {\n    return [useDaumPostcodePopup];\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"auth-wrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auth-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"auth-jumbotron-box\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"auth-jumbotron-contents\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"auth-logo-icon\",\n            children: \" \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 550,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"auth-jumbotron-text-box\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"auth-jumbotron-text\",\n              children: '환영합니다'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 552,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"auth-jumbotron-text\",\n              children: 'HOONS BOARD 입니다'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 553,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 551,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 549,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 548,\n        columnNumber: 11\n      }, this), view === 'sign-in' && /*#__PURE__*/_jsxDEV(SignInCard, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 558,\n        columnNumber: 34\n      }, this), view === 'sign-up' && /*#__PURE__*/_jsxDEV(SignUpCard, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 559,\n        columnNumber: 34\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 547,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 546,\n    columnNumber: 5\n  }, this);\n}\n_s3(Authentication, \"9S/UTW4boHJSdDcSeMSTDXfl25A=\", false, function () {\n  return [useCookies, useNavigate];\n});\n_c = Authentication;\n;\nvar _c;\n$RefreshReg$(_c, \"Authentication\");","map":{"version":3,"names":["React","useRef","useState","InputBox","signInRequest","signUpReqeust","useCookies","MAIN_PATH","useNavigate","useDaumPostcodePopup","jsxDEV","_jsxDEV","Fragment","_Fragment","Authentication","_s3","_s","$RefreshSig$","_s2","view","setView","cookies","setCookie","navigator","SignInCard","emailRef","passwordRef","email","setEmail","password","setPassword","passwordType","setPasswordType","passwordButtonIcon","setPasswordButtonIcon","error","setError","signUpResponse","responseBody","alert","code","token","expirationTime","now","Date","getTime","expires","path","onEmailChangeHandler","event","value","target","onPasswordChangeHandler","onSignInButtonClickHandler","requestBody","then","signInResponse","onSignUpLinkClickHandler","onPasswordButtonClickHandler","onEmailKeyDownHandler","key","current","focus","onPasswordKeyDownHandler","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","label","type","placeholder","onChange","onKeyDown","icon","onButtonClick","onClick","SignUpCard","passwordCheckRef","nicknameRef","telNumberRef","addressRef","addressDetailRef","page","setPage","passwordCheck","setPasswordCheck","nickname","setNickname","telNumber","setTelNumber","address","setAddress","addressDetail","setAddressDetail","agreedPersonal","setAgreedPersonal","passwordCheckType","setPasswordCheckType","isEmailError","setEmailError","isPasswordError","setPasswordError","isPasswordCheckError","setPasswordCheckError","isNicknameError","setNicknameError","isTelNumberError","setTelNumberError","isAddressError","setAddressError","isAgreedPersonalError","setAgreedPersonalError","emailErrorMessage","setEmailErrorMessage","passwordErrorMessage","setPasswordErrorMessage","passwordCheckErrorMessage","setPasswordCheckErrorMessage","nicknameErrorMessage","setNicknameErrorMessage","telNumberErrorMessage","setTelNumberErrorMessage","addressErrorMessage","setAddressErrorMessage","passwordCheckButtonIcon","setPasswordCheckButtonIcon","open","onPasswordCheckChangeHandler","onNicknameChangeHandler","onTelNumberChangeHandler","onAddressChangeHandler","onAddressDetailChangeHandler","onAgreedPersonalClickHandler","onPasswordCheckButtonClickHandler","onAddressButtonClickHandler","onComplete","onNextButtonClickHandler","emailPattern","isEmailPattern","test","isCheckedPassword","trim","length","isEqualPassword","onSignUpButtonClickHandler","hasNickname","telNumberPattern","isTelNumberPattern","hasAddress","onSignInLinkClickHandler","onPasswordCheckKeyDownHandler","onNicknameKeyDownHandler","onTelNumberKeyDownHandler","onAddressKeyDownHandler","onAddressDetailKeyDownHandler","data","message","id","_c","$RefreshReg$"],"sources":["C:/Users/tbs03/Spring_react_mysql/react_board/board-front/src/views/Authentication/index.tsx"],"sourcesContent":["import React, { ChangeEvent, KeyboardEvent, useRef, useState } from 'react'\r\nimport './style.css';\r\nimport InputBox from 'components/InputBox';\r\nimport { SignInRequestDto, SignUpRequestDto } from 'apis/request/auth';\r\nimport { signInRequest, signUpReqeust } from 'apis';\r\nimport { SignInResponseDto, SignUpResponseDto } from 'apis/response/auth';\r\nimport { ResponseDto } from 'apis/response';\r\nimport { useCookies } from 'react-cookie';\r\nimport { MAIN_PATH } from 'constant';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Address, useDaumPostcodePopup } from 'react-daum-postcode';\r\nimport { response } from 'express';\r\n\r\n\r\n//          component: 인증 화면 컴포넌트       //\r\nexport default function Authentication() {\r\n\r\n  //    state: 화면 상태    //\r\n  const [view, setView] = useState<'sign-in' | 'sign-up'>('sign-in');\r\n  \r\n  //    state : 쿠키 상태   //\r\n  const [cookies, setCookie] = useCookies();\r\n\r\n\r\n  //      function : 네비게이트 함수        //\r\n  const navigator = useNavigate();\r\n\r\n  //        component : sign in card 컴포넌트    //\r\n  const SignInCard = () => {\r\n    \r\n    //    state: 이메일 요소 참조 상태    //\r\n    const emailRef = useRef<HTMLInputElement | null>(null);\r\n    //    state: 패스워드 요소 참조 상태    //\r\n     const passwordRef = useRef<HTMLInputElement | null>(null);\r\n\r\n     \r\n\r\n    //    state: 이메일 상태    //\r\n    const [email, setEmail] = useState<string>('');\r\n    //    state : 패스워드 상태       //\r\n    const [password, setPassword] = useState<string>('');\r\n    //    state : 패스워드 타입 상태       //\r\n    const [passwordType, setPasswordType] = useState<'text' | 'password'>('password');\r\n    //    state : 패스워드 버튼 상태       //\r\n    const [passwordButtonIcon, setPasswordButtonIcon] = useState<'eye-light-off-icon' | 'eye-light-on-icon'>('eye-light-off-icon');\r\n    //    state : 에러 상태       //\r\n    const [error, setError] = useState<boolean>(false);\r\n\r\n    //    function : signInResponse 처리함수           //\r\n    const signUpResponse = (responseBody: SignInResponseDto | ResponseDto | null) => {\r\n          if (!responseBody) {\r\n            alert('네트워크 이상입니다.');\r\n            return;\r\n          }\r\n          const { code } = responseBody;\r\n          if(code === 'DBE') alert('데이터베이스 오류입니다.');\r\n          if(code === 'VF' || code === 'SF') setError(true);\r\n          if(code !== 'SU') return ;\r\n          \r\n          const { token, expirationTime } = responseBody as SignInResponseDto;\r\n          const now = new Date().getTime();\r\n          const expires = new Date(now + expirationTime * 1000);\r\n\r\n          setCookie('accessToken', token, { expires, path: MAIN_PATH()});\r\n          navigator(MAIN_PATH());\r\n    }\r\n\r\n    //   event handler : 이메일 변경 이벤트 처리        //\r\n    const onEmailChangeHandler = (event: ChangeEvent<HTMLInputElement>) => {\r\n        setError(false);\r\n        const { value } = event.target;\r\n        setEmail(value);\r\n    }\r\n    \r\n    //  event handler : 비밀번호 변경 이벤트 처리\r\n    const onPasswordChangeHandler = (event: ChangeEvent<HTMLInputElement>) => {\r\n      setError(false);\r\n      const { value } = event.target;\r\n      setPassword(value);\r\n  }\r\n\r\n    //   event handler : 로그인 버튼 클릭 이벤트 처리    //\r\n    const onSignInButtonClickHandler = () => {\r\n      const requestBody: SignInRequestDto = { email, password};\r\n      signInRequest(requestBody).then(signInResponse);\r\n\r\n    }\r\n\r\n    //   event handler : 회원가입 버튼 클릭 이벤트 처리    //\r\n    const onSignUpLinkClickHandler = () => {\r\n        setView('sign-up');\r\n    }\r\n\r\n    //   event handler : 패스워드 버튼 클릭 이벤트 처리    //\r\n    const onPasswordButtonClickHandler = () => {\r\n     if(passwordType === 'text') {\r\n       setPasswordType('password');\r\n       setPasswordButtonIcon('eye-light-off-icon');\r\n     } else {\r\n       setPasswordType('text');\r\n       setPasswordButtonIcon('eye-light-on-icon')\r\n     }\r\n    }\r\n    //   event handler : 이메일 인풋 키 다운 이벤트 처리    //\r\n    const onEmailKeyDownHandler = (event:KeyboardEvent<HTMLInputElement>) => {\r\n       if(event.key !== 'Enter') return;\r\n       if(!passwordRef.current )  return;\r\n       passwordRef.current.focus();\r\n    }\r\n\r\n    //   event handler : 이메일 인풋 키 다운 이벤트 처리    //\r\n    const onPasswordKeyDownHandler = (event:KeyboardEvent<HTMLInputElement>) => {\r\n     if(event.key !== 'Enter') return;\r\n     onSignInButtonClickHandler();\r\n    \r\n  }\r\n\r\n\r\n    \r\n    //        render : sign up card 컴포넌트 렌더링 //\r\n    return (\r\n      <div className='auth-card'>\r\n        <div className='auth-card-box'>\r\n          <div className='auth-card-top'>\r\n            <div className='auth-card-title-box'>\r\n              <div className='auth-card-title'>{'로그인'}</div>\r\n            </div>\r\n            <InputBox ref={emailRef} label='이메일 주소' type='text' placeholder='이메일 주소를 입력해주세요.' error={error} value={email} onChange={onEmailChangeHandler} onKeyDown={onEmailKeyDownHandler} />\r\n            <InputBox ref={passwordRef} label='패스워드' type={passwordType} placeholder='비밀번호를 입력해주세요.' error={error} value={password} onChange={onPasswordChangeHandler} icon={passwordButtonIcon} onButtonClick={onPasswordButtonClickHandler} onKeyDown={onPasswordKeyDownHandler}/>\r\n          </div>\r\n          <div className='auth-card-bottom'>\r\n            {error && \r\n            \r\n            \r\n            <div className='auth-sign-in-error-box'>\r\n              <div className='auth-sign-in-error-message'>\r\n                {'이메일 주소 또는 비밀번호를 잘못 입력했습니다. \\n 입력하신 내용을 다시 확인해주세요.'}\r\n              </div>\r\n            </div>\r\n            }\r\n            <div className='black-large-full-button' onClick={onSignInButtonClickHandler}>{'로그인'}</div>\r\n            <div className='auth-description-box'>\r\n              <div className='auth-description'>{'신규 사용자이신가요?'}<span className='auth-description-link' onClick={onSignUpLinkClickHandler}>{'회원가입'}</span></div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n  const SignUpCard = () => {\r\n\r\n    //      state : 이메일 요소 참조 상태        //\r\n    const emailRef = useRef<HTMLInputElement | null >(null);\r\n    //      state : 패스워드 요소 참조 상태        //\r\n    const passwordRef = useRef<HTMLInputElement | null >(null);\r\n    //      state : 패스워드 확인 요소 참조 상태        //\r\n    const passwordCheckRef = useRef<HTMLInputElement | null >(null);\r\n    //      state : 닉네임 요소 참조 상태        //\r\n    const nicknameRef = useRef<HTMLInputElement | null >(null);\r\n    //      state : 휴대 전화번호 요소 참조 상태        //\r\n    const telNumberRef = useRef<HTMLInputElement | null >(null);\r\n     //      state : 주소 요소 참조 상태        //\r\n     const addressRef = useRef<HTMLInputElement | null >(null);\r\n     //      state : 상세주소 요소 참조 상태        //\r\n     const addressDetailRef = useRef<HTMLInputElement | null >(null);\r\n    \r\n\r\n    //      state : 페이지 번호 상태        //\r\n    const [page, setPage] = useState<1 | 2>(2);\r\n\r\n    //      state : 이메일 상태        //\r\n    const [email, setEmail] = useState<string>('');\r\n\r\n    //      state : 패스워드 상태        //\r\n    const [password, setPassword] = useState<string>('');\r\n\r\n    //      state : 패스워드 체크 상태        //\r\n    const [passwordCheck, setPasswordCheck] = useState<string>('');\r\n    //      state : 닉네임 상태               //\r\n    const [nickname, setNickname] = useState<string>('');\r\n    //      state : 핸드폰 번호 상태               //\r\n    const [telNumber, setTelNumber] = useState<string>('');\r\n    //      state : 주소 상태               //\r\n    const [address, setAddress] = useState<string>('');\r\n    //      state : 상세주소 상태               //\r\n    const [addressDetail, setAddressDetail] = useState<string>('');\r\n    //      state : 개인 정보 동의 상태         //\r\n    const [agreedPersonal, setAgreedPersonal] = useState<boolean>(false);\r\n    \r\n\r\n    //      state : 패스워드 타입 상태        //\r\n    const [passwordType, setPasswordType] = useState<'text' | 'password'>('password');\r\n    //      state : 패스워드 체크 타입 상태        //\r\n    const [passwordCheckType, setPasswordCheckType] = useState<'text' | 'password'>('password');\r\n\r\n    //      state : 이메일 에러 상태        //\r\n    const [isEmailError, setEmailError] = useState<boolean>(false);\r\n\r\n    //      state : 패스워드 에러 상태        //\r\n    const [isPasswordError, setPasswordError] = useState<boolean>(false);\r\n\r\n    //      state : 패스워드 확인 에러 상태        //\r\n    const [isPasswordCheckError, setPasswordCheckError] = useState<boolean>(false);\r\n    //      state : 닉네임 에러 상태        //\r\n    const [isNicknameError, setNicknameError] = useState<boolean>(false);\r\n    //      state : 핸드폰 번호 에러 상태        //\r\n    const [isTelNumberError, setTelNumberError] = useState<boolean>(false);\r\n    //      state : 주소 에러 상태        //\r\n    const [isAddressError, setAddressError] = useState<boolean>(false);\r\n    //      state : 개인 정보 동의 에러 상태 //\r\n    const [isAgreedPersonalError, setAgreedPersonalError] = useState<boolean>(false);\r\n\r\n    //      state :이메일 에러 메세지 상태        //\r\n    const [emailErrorMessage, setEmailErrorMessage] = useState<string>('');\r\n\r\n    //      state :패스워드 에러 메세지 상태        //\r\n    const [passwordErrorMessage, setPasswordErrorMessage] = useState<string>('');\r\n\r\n    //      state :패스워드 확인 에러 메세지 상태        //\r\n    const [passwordCheckErrorMessage, setPasswordCheckErrorMessage] = useState<string>('');\r\n\r\n    //      state : 닉네임  에러 메세지 상태        //\r\n    const [nicknameErrorMessage, setNicknameErrorMessage] = useState<string>('');\r\n    //      state : 핸드폰 번호  에러 메세지 상태        //\r\n    const [telNumberErrorMessage, setTelNumberErrorMessage] = useState<string>('');\r\n    //      state : 주소  에러 메세지 상태        //\r\n    const [addressErrorMessage, setAddressErrorMessage] = useState<string>('');\r\n\r\n    //      state : 패스워드 버튼 아이콘 상태         //\r\n    const [passwordButtonIcon, setPasswordButtonIcon] = useState<'eye-light-off-icon' | 'eye-light-on-icon'>('eye-light-off-icon');\r\n\r\n     //      state : 패스워드 버튼 아이콘 상태         //\r\n    const [passwordCheckButtonIcon, setPasswordCheckButtonIcon] = useState<'eye-light-off-icon' | 'eye-light-on-icon'>('eye-light-off-icon');\r\n\r\n\r\n    // function : 다음 주소 검색 팝업 오픈 함수            //\r\n    const open = useDaumPostcodePopup();\r\n\r\n     // function : sign Up response          //\r\n    const signUpResponse = (responseBody : SignUpResponseDto | ResponseDto | null) => {\r\n        if(!responseBody) {\r\n          alert('네트워크 이상입니다.');\r\n          return;\r\n        }\r\n        const { code } = responseBody;\r\n        if ( code === 'DE' ) {\r\n          setEmailError(true);\r\n          setEmailErrorMessage('중복되는 이메일 메시지 입니다.');\r\n        }\r\n        if ( code === 'DN' ) {\r\n          setNicknameError(true);\r\n          setNicknameErrorMessage('중복되는 닉네임 입니다.');\r\n        }\r\n        if ( code === 'DT' ) {\r\n          setTelNumberError(true);\r\n          setTelNumberErrorMessage('중복되는 핸드폰 번호 입니다.');\r\n        }\r\n        if ( code === 'VF') alert('모든 값을 입력하세요');\r\n        if ( code === 'DBE') alert('데이터 입력 오류입니다.');\r\n        \r\n        if( code !== 'SU') return;\r\n\r\n        setView('sign-in');\r\n    }\r\n\r\n    // event handler :  이메일 변경 이벤트 처리       //\r\n    const onEmailChangeHandler = (event:ChangeEvent<HTMLInputElement>) => {\r\n      const { value } = event.target;\r\n      setEmail(value);\r\n      setEmailError(false);\r\n      setEmailErrorMessage('');\r\n    }\r\n\r\n    // event handler :  패스워드 변경 이벤트 처리       //\r\n    const onPasswordChangeHandler = (event:ChangeEvent<HTMLInputElement>) => {\r\n      const { value } = event.target;\r\n      setPassword(value);\r\n      setPasswordError(false);\r\n      setPasswordErrorMessage('');\r\n    }\r\n\r\n    // event handler :  패스워드 확인 변경 이벤트 처리       //\r\n    const onPasswordCheckChangeHandler = (event:ChangeEvent<HTMLInputElement>) => {\r\n      const { value } = event.target;\r\n      setPasswordCheck(value);\r\n      setPasswordCheckError(false);\r\n      setPasswordCheckErrorMessage('');\r\n       \r\n    }\r\n     // event handler : 닉네임 변경 이벤트 처리       //\r\n     const onNicknameChangeHandler = (event:ChangeEvent<HTMLInputElement>) => {\r\n      const { value } = event.target;\r\n      setNickname(value);\r\n      setNicknameError(false);\r\n      setNicknameErrorMessage('');\r\n    }\r\n      // event handler : 핸드폰 번호 변경 이벤트 처리       //\r\n      const onTelNumberChangeHandler = (event:ChangeEvent<HTMLInputElement>) => {\r\n        const { value } = event.target;\r\n      setTelNumber(value);\r\n      setTelNumberError(false);\r\n      setTelNumberErrorMessage('');\r\n      }\r\n       // event handler : 주소 변경 이벤트 처리       //\r\n       const onAddressChangeHandler = (event:ChangeEvent<HTMLInputElement>) => {\r\n        const { value } = event.target;\r\n      setAddress(value);\r\n      setAddressError(false);\r\n      setAddressErrorMessage('');\r\n      }\r\n       // event handler : 상세 주소 변경 이벤트 처리       //\r\n       const onAddressDetailChangeHandler = (event:ChangeEvent<HTMLInputElement>) => {\r\n        const { value } = event.target;\r\n      setAddressDetail(value);\r\n      }\r\n      // event handler : 개인 정보 클릭 이벤트 처리         //\r\n      const onAgreedPersonalClickHandler = () => {\r\n          setAgreedPersonal(!agreedPersonal);\r\n          setAgreedPersonalError(false);\r\n      }\r\n\r\n    // event handler : 패스워드 버튼 클릭 이벤트 처리       //\r\n    const onPasswordButtonClickHandler = () => {\r\n      if ( passwordButtonIcon === 'eye-light-off-icon') {\r\n      setPasswordButtonIcon('eye-light-on-icon');\r\n      setPasswordType('text');\r\n      }\r\n      else {\r\n      setPasswordButtonIcon('eye-light-off-icon');\r\n      setPasswordType('password');\r\n\r\n      }\r\n    }\r\n     // event handler : 패스워드 버튼 클릭 이벤트 처리       //\r\n     const onPasswordCheckButtonClickHandler = () => {\r\n      if ( passwordButtonIcon === 'eye-light-off-icon') {\r\n      setPasswordCheckButtonIcon('eye-light-on-icon');\r\n      setPasswordCheckType('text');\r\n      }\r\n      else {\r\n      setPasswordCheckButtonIcon('eye-light-off-icon');\r\n      setPasswordCheckType('password');\r\n\r\n      }\r\n    }\r\n    // event handler : 주소 버튼 클릭 이벤트 처리       //\r\n    const onAddressButtonClickHandler = () => {\r\n      open({ onComplete}) ;\r\n\r\n    }\r\n\r\n    \r\n\r\n    //  event handler : 다음 단계 버튼 클릭 이벤트 처리 //\r\n    const onNextButtonClickHandler = () => {\r\n      const emailPattern = /^[a-zA-Z0-9]*@([-.]?[a-zA-Z0-9])*\\.[a-zA-Z]{2,4}$/;\r\n      const isEmailPattern = emailPattern.test(email);\r\n      if(!isEmailPattern) {\r\n        setEmailError(true);\r\n        setEmailErrorMessage('이메일 주소 포맷이 맞지 않습니다.')\r\n      }\r\n    const isCheckedPassword = password.trim().length > 8\r\n      if(isCheckedPassword) {\r\n        setPasswordError(true);\r\n        setPasswordErrorMessage('비밀번호는 8자 이상 입력해주세요.');\r\n      }\r\n    const isEqualPassword = password === passwordCheck;\r\n    if(isEqualPassword) {\r\n      setPasswordCheckError(true);\r\n      setPasswordCheckErrorMessage('비밀번호가 일치하지 않습니다.');\r\n    }\r\n    if(!isEmailPattern || !isCheckedPassword || !isEqualPassword) return;\r\n      setPage(2);\r\n    }\r\n\r\n    // event handler : 회원가입 버튼 클릭 이벤트 처리   //\r\n    const onSignUpButtonClickHandler = () => {\r\n      const emailPattern = /^[a-zA-Z0-9]*@([-.]?[a-zA-Z0-9])*\\.[a-zA-Z]{2,4}$/;\r\n      const isEmailPattern = emailPattern.test(email);\r\n      if(!isEmailPattern) {\r\n        setEmailError(true);\r\n        setEmailErrorMessage('이메일 주소 포맷이 맞지 않습니다.');\r\n      }\r\n    const isCheckedPassword = password.trim().length > 8\r\n      if(isCheckedPassword) {\r\n        setPasswordError(true);\r\n        setPasswordErrorMessage('비밀번호는 8자 이상 입력해주세요.');\r\n      }\r\n    const isEqualPassword = password === passwordCheck;\r\n    if(isEqualPassword) {\r\n      setPasswordCheckError(true);\r\n      setPasswordCheckErrorMessage('비밀번호가 일치하지 않습니다.');\r\n    }\r\n    if(!isEmailPattern || !isCheckedPassword || !isEqualPassword) {\r\n      setPage(1);\r\n      return;\r\n    }\r\n    const hasNickname = nickname.trim().length !== 0;\r\n    if(!hasNickname) {\r\n      setNicknameError(true);\r\n      setNicknameErrorMessage('닉네임을 입력해주세요.');\r\n    }\r\n    const telNumberPattern = /^[0-9]{11,13}$/;\r\n    const isTelNumberPattern = telNumberPattern.test(telNumber);\r\n    if(!isTelNumberPattern) {\r\n      setTelNumberError(true);\r\n      setTelNumberErrorMessage('숫자만 입력해주세요');\r\n    }\r\n    const hasAddress = address.trim().length > 0;\r\n    if(!hasAddress) {\r\n      setAddressError(true);\r\n      setAddressErrorMessage('주소를 입력해주세요');\r\n    }\r\n\r\n    if(!agreedPersonal) setAgreedPersonalError(true);\r\n\r\n    if(!hasNickname || !isTelNumberPattern || !agreedPersonal ) return;\r\n\r\n    const requestBody: SignUpRequestDto = {\r\n      email, password, nickname, telNumber, address, addressDetail, agreedPersonal\r\n    };\r\n\r\n    signUpReqeust(requestBody).then(signUpResponse);\r\n\r\n    }\r\n\r\n    // event handler : 로그인 링크 클릭 이벤트 처리     //\r\n    const onSignInLinkClickHandler = () => {\r\n      setView('sign-in');\r\n    }\r\n\r\n    //  event handler : 이메일 키 다운 이벤트 처리      //\r\n    const onEmailKeyDownHandler = (event: KeyboardEvent<HTMLInputElement>) => {\r\n      if(event.key ! == 'Enter') return;\r\n      if(!passwordRef.current) return;\r\n      passwordRef.current.focus();\r\n    }\r\n\r\n    //  event handler : 이메일 키 다운 이벤트 처리      //\r\n    const onPasswordKeyDownHandler = (event: KeyboardEvent<HTMLInputElement>) => {\r\n      if(event.key ! == 'Enter') return;\r\n      if(!passwordCheckRef.current) return;\r\n      passwordCheckRef.current.focus();\r\n    }\r\n\r\n    //  event handler : 패스워드 확인 키 다운 이벤트 처리      //\r\n    const onPasswordCheckKeyDownHandler = (event: KeyboardEvent<HTMLInputElement>) => {\r\n      if(event.key ! == 'Enter') return;\r\n      if(!nicknameRef.current) return;\r\n      onNextButtonClickHandler();\r\n      nicknameRef.current.focus();\r\n      \r\n    }\r\n    //  event handler : 닉네임 키 다운 이벤트 처리      //\r\n    const onNicknameKeyDownHandler = (event: KeyboardEvent<HTMLInputElement>) => {\r\n      if(event.key ! == 'Enter') return;\r\n      if(!telNumberRef.current) return;\r\n      telNumberRef.current.focus();\r\n    }\r\n    //  event handler : 휴대폰 번호 키 다운 이벤트 처리      //\r\n    const onTelNumberKeyDownHandler = (event: KeyboardEvent<HTMLInputElement>) => {\r\n      if(event.key ! == 'Enter') return;\r\n      onAddressButtonClickHandler();\r\n      \r\n    }\r\n    //  event handler : 주소 키 다운 이벤트 처리      //\r\n    const onAddressKeyDownHandler = (event: KeyboardEvent<HTMLInputElement>) => {\r\n      if(event.key ! == 'Enter') return;\r\n      if(!addressDetailRef.current) return;\r\n      addressDetailRef.current.focus();\r\n      \r\n    }\r\n    //  event handler : 상세 주소 키 다운 이벤트 처리      //\r\n    const onAddressDetailKeyDownHandler = (event: KeyboardEvent<HTMLInputElement>) => {\r\n      if(event.key ! == 'Enter') return;\r\n      onSignUpButtonClickHandler();\r\n     \r\n    }\r\n\r\n\r\n    //  event handler : 다음 주소 검색 완료 이벤트 처리   //\r\n    const onComplete = (data: Address) => {\r\n        const {address } = data;\r\n        setAddress(address);\r\n        if (!addressDetailRef.current) return;\r\n        addressDetailRef.current.focus();\r\n    }\r\n    \r\n\r\n    \r\n    //      render : sign up card 컴포넌트 렌더링     //\r\n\r\n    return (\r\n      <div className='auth-card'>\r\n        <div className='auth-card-box'>\r\n          <div className='auth-card-top'>\r\n            <div className='auth-card-title-box'>\r\n              <div className='auth-card-title'>{'회원가입'}</div>\r\n              <div className='auth-card-page'>{`${page}/2`}</div>\r\n            </div>\r\n            {page === 1 && (\r\n              <>\r\n            <InputBox ref={emailRef} label='이메일 주소*' type='text' placeholder='이메일 주소를 입력해주세요' value={email} onChange={onEmailChangeHandler} error={isEmailError} message={emailErrorMessage} onKeyDown={onEmailKeyDownHandler}/>\r\n            <InputBox ref={passwordRef} label='비밀번호*' type={passwordType} placeholder='비밀번호를 입력해주세요' value={password} onChange={onPasswordChangeHandler} error={isPasswordError} message={passwordErrorMessage} icon={passwordButtonIcon} onButtonClick={onPasswordButtonClickHandler} onKeyDown={onPasswordKeyDownHandler} />\r\n            <InputBox ref={passwordCheckRef} label='비밀번호 확인*' type={passwordCheckType} placeholder='비밀번호를 다시 입력해주세요' value={passwordCheck} onChange={onPasswordCheckChangeHandler} error={isPasswordCheckError} message={passwordCheckErrorMessage} icon={passwordCheckButtonIcon} onButtonClick={onPasswordCheckButtonClickHandler} onKeyDown={onPasswordCheckKeyDownHandler}/>\r\n             </>\r\n            )}\r\n            {page === 2 && (\r\n              <>\r\n              <InputBox ref={nicknameRef} label='닉네임*' type='text' placeholder='닉네임을 입력해주세요' value={nickname} onChange={onNicknameChangeHandler} error={isNicknameError} message={nicknameErrorMessage} onKeyDown={onNicknameKeyDownHandler}/>\r\n              <InputBox ref={telNumberRef} label='휴대폰 번호' type='text' placeholder='휴대폰 번호를 입력해주세요'value={telNumber} onChange={onTelNumberChangeHandler} error={isTelNumberError} message={telNumberErrorMessage} onKeyDown={onTelNumberKeyDownHandler}/>\r\n              <InputBox ref={addressRef} label='주소*' type='text' placeholder='우편번호 찾기'value={address} onChange={onAddressChangeHandler} error={isAddressError} message={addressErrorMessage} icon='expand-right-light-icon' onButtonClick={onAddressButtonClickHandler} onKeyDown={onAddressKeyDownHandler}/>\r\n              <InputBox ref={addressDetailRef} label='상세 주소' type='text' placeholder='상세 주소를 입력해주세요.' value={addressDetail} onChange={onAddressDetailChangeHandler} error={false} onKeyDown={onAddressDetailKeyDownHandler}/>\r\n              </>\r\n\r\n            )}\r\n             </div>\r\n          <div className='auth-card-bottom'>\r\n            {page === 1 && (\r\n               <div className='black-large-full-button' onClick={onNextButtonClickHandler}>{'다음 단계'}</div>\r\n            )}\r\n            {page === 2 && (\r\n              <>\r\n              <div className='auth-consent-box'>\r\n                <div className='auth-check-box' onClick={onAgreedPersonalClickHandler}>\r\n                    <div className={`icon ${agreedPersonal ? 'check-round-fill-icon' : 'check-ring-light-icon'}`}></div>\r\n               </div>\r\n                <div className={ isAgreedPersonalError ? 'auth-consent-title-error' : 'auth-consent-title'}>{'개인정보 동의'}</div>\r\n                <div className='auth-consent-link'>{'더보기 >'}</div>\r\n              </div>\r\n              <div className='black-large-full-button' onClick={onSignUpButtonClickHandler}>{'회원가입'}</div>\r\n              </>\r\n            )}\r\n           \r\n            <div className='auth-description-box'>\r\n            <div className='auth-description'>{'이미 계정이 있으신가요? '}<span className='auth-description-link' onClick={onSignInLinkClickHandler}>{'로그인'}</span></div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n\r\n  };\r\n//          render : 컴포넌트 렌더링            //    \r\n  return (\r\n    <div id='auth-wrapper'>\r\n        <div className='auth-container'>\r\n          <div className='auth-jumbotron-box'>\r\n              <div className='auth-jumbotron-contents'>\r\n                  <div className='auth-logo-icon'> </div>\r\n                  <div className='auth-jumbotron-text-box'> \r\n                    <div className='auth-jumbotron-text'>{'환영합니다'}</div>  \r\n                    <div className='auth-jumbotron-text'>{'HOONS BOARD 입니다'}</div>  \r\n                  </div>\r\n              </div>\r\n          </div>\r\n          \r\n          {view === 'sign-in' && <SignInCard />}\r\n          {view === 'sign-up' && <SignUpCard />}\r\n        </div>\r\n    </div>\r\n  )\r\n\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}