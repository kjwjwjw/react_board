{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tbs03\\\\Spring_react_mysql\\\\react_board\\\\board-front\\\\src\\\\layouts\\\\Header\\\\index.tsx\",\n  _s2 = $RefreshSig$();\nimport React, { useRef, useState, useEffect } from 'react';\nimport './style.css';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { AUTH_PATH, MAIN_PATH, SEARCH_PATH, USER_PATH } from 'constant';\nimport { useCookies } from 'react-cookie';\n\n//              component: Header       //\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Header() {\n  _s2();\n  var _s = $RefreshSig$();\n  //     state : cookie 상태          //\n  const [cookies, setCookie] = useCookies();\n  //     state : 로그인 상태          //\n  const [isLogin, setLogin] = useState(true);\n\n  //  function : 네비게이트 함수      //\n  const navigate = useNavigate();\n\n  //      event handler : 로그 클릭   //\n  const onLogoClickHandler = () => {\n    navigate(MAIN_PATH());\n  };\n\n  //      component : 검색 버튼       //  \n  const SearchButton = () => {\n    _s();\n    //      state : 검색어 버튼 요소 참조 상태       //\n    const searchButtonRef = useRef(null);\n    //      state : 검색 버튼 상태       //\n    const [status, setStatus] = useState(false);\n    //      state : 검색 상태       //\n    const [word, setWord] = useState('');\n    //      state : 검색어 path variable      //\n    const {\n      searchWord\n    } = useParams();\n\n    //      event handler : 검색 변경 이벤트 아이콘 클릭        //\n    const onSearchWordChangeHandler = event => {\n      const value = event.target.value;\n      setWord(value);\n    };\n    //      event handler : 검색 키 이벤트 처리         //\n    const onSearchWordKeyDownHandler = event => {\n      if (event.key !== 'Enter') return;\n      if (!searchButtonRef.current) return;\n      searchButtonRef.current.click();\n    };\n    //      event handler : 검색 아이콘 클릭        //\n    const onSearchButtonClickHandler = () => {\n      if (!status) {\n        setStatus(!status);\n        return;\n      }\n      navigate(SEARCH_PATH(word));\n    };\n\n    //      effect : 검색어 path variable 변경 될때 마다 실행될 함수        //\n    useEffect(() => {\n      if (searchWord) {\n        setWord(searchWord);\n        setStatus(true);\n      }\n    }, [searchWord]);\n    if (!status)\n      //          render : 검색 버튼 렌더링 (false) //\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"icon-button\",\n        onClick: onSearchButtonClickHandler,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"icon search-light-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 19\n      }, this);\n    //          render : 검색 버튼 렌더링 (true) //\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header-search-input-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"header-search-input\",\n        type: \"text\",\n        placeholder: \"\\uAC80\\uC0C9\\uC5B4\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\",\n        value: searchWord,\n        onChange: onSearchWordChangeHandler,\n        onKeyDown: onSearchWordKeyDownHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: searchButtonRef,\n        className: \"icon-button\",\n        onClick: onSearchButtonClickHandler,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"icon search-light-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this);\n  };\n  //      component : 로그인 또는 마이페이지 버튼 컴포넌트       //  \n  _s(SearchButton, \"+LJFaTw1nzgfWRnFov5ueiwMrQ8=\", false, function () {\n    return [useParams];\n  });\n  const LoginMyPageButton = () => {\n    // event handler : 마이페이지 버튼 클릭                 //\n    const onMyPageButtonClickHandler = () => {\n      navigate(USER_PATH(''));\n    };\n    const onSignInButtonClickHandler = () => {\n      navigate(AUTH_PATH());\n    };\n    if (isLogin)\n      //      render : 로그인 버튼 컴포넌트 렌더링            //\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"white-button\",\n        onClick: onMyPageButtonClickHandler,\n        children: '마이페이지'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"black-button\",\n      onClick: onSignInButtonClickHandler,\n      children: '로그인'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 21\n    }, this);\n  };\n\n  // render : 헤더 렌더링             //\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"header\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-left-box\",\n        onClick: onLogoClickHandler,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"icon-box\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"icon logo-dark-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header-logo\",\n          children: 'Hoons Board'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-right-box\",\n        children: [/*#__PURE__*/_jsxDEV(SearchButton, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(LoginMyPageButton, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n}\n_s2(Header, \"kYX9JbS56ZO7THHk96arq8849s4=\", false, function () {\n  return [useCookies, useNavigate];\n});\n_c = Header;\nvar _c;\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"names":["React","useRef","useState","useEffect","useNavigate","useParams","AUTH_PATH","MAIN_PATH","SEARCH_PATH","USER_PATH","useCookies","jsxDEV","_jsxDEV","Header","_s2","_s","$RefreshSig$","cookies","setCookie","isLogin","setLogin","navigate","onLogoClickHandler","SearchButton","searchButtonRef","status","setStatus","word","setWord","searchWord","onSearchWordChangeHandler","event","value","target","onSearchWordKeyDownHandler","key","current","click","onSearchButtonClickHandler","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","onKeyDown","ref","LoginMyPageButton","onMyPageButtonClickHandler","onSignInButtonClickHandler","id","_c","$RefreshReg$"],"sources":["C:/Users/tbs03/Spring_react_mysql/react_board/board-front/src/layouts/Header/index.tsx"],"sourcesContent":["import React, { ChangeEvent, useRef, useState, KeyboardEvent, useEffect } from 'react'\r\nimport './style.css';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport { AUTH_PATH, MAIN_PATH, SEARCH_PATH, USER_PATH } from 'constant';\r\nimport { useCookies } from 'react-cookie';\r\n\r\n//              component: Header       //\r\n\r\nexport default function Header() {\r\n\r\n    //     state : cookie 상태          //\r\n    const [cookies, setCookie] = useCookies();\r\n    //     state : 로그인 상태          //\r\n    const [isLogin, setLogin] = useState<boolean>(true);\r\n\r\n\r\n    //  function : 네비게이트 함수      //\r\n    const navigate = useNavigate();\r\n\r\n    //      event handler : 로그 클릭   //\r\n    const onLogoClickHandler = () => {\r\n        navigate(MAIN_PATH());\r\n    }\r\n\r\n    //      component : 검색 버튼       //  \r\n    const SearchButton = () => {\r\n\r\n        //      state : 검색어 버튼 요소 참조 상태       //\r\n        const searchButtonRef = useRef<HTMLDivElement | null>(null);\r\n        //      state : 검색 버튼 상태       //\r\n        const[status, setStatus] = useState<boolean>(false);\r\n         //      state : 검색 상태       //\r\n        const[word, setWord] = useState<string>('');\r\n         //      state : 검색어 path variable      //\r\n         const { searchWord } = useParams();\r\n\r\n        //      event handler : 검색 변경 이벤트 아이콘 클릭        //\r\n        const onSearchWordChangeHandler = (event: ChangeEvent<HTMLInputElement>) => {\r\n            const value = event.target.value;\r\n            setWord(value);\r\n        };\r\n        //      event handler : 검색 키 이벤트 처리         //\r\n        const onSearchWordKeyDownHandler = (event : KeyboardEvent<HTMLInputElement>) => {\r\n            if (event.key !== 'Enter') return;\r\n            if (!searchButtonRef.current) return;\r\n            searchButtonRef.current.click();\r\n        };\r\n        //      event handler : 검색 아이콘 클릭        //\r\n        const onSearchButtonClickHandler = () => {\r\n            if(!status){\r\n                setStatus(!status);\r\n\r\n                return;\r\n            }\r\n            navigate(SEARCH_PATH(word));\r\n        };\r\n\r\n         //      effect : 검색어 path variable 변경 될때 마다 실행될 함수        //\r\n         useEffect(() => {\r\n            if (searchWord) {\r\n                setWord(searchWord);\r\n                setStatus(true);\r\n            }\r\n          }, [searchWord]);\r\n        \r\n\r\n        if (!status)\r\n         //          render : 검색 버튼 렌더링 (false) //\r\n        return  ( <div className='icon-button' onClick={onSearchButtonClickHandler}>\r\n            <div className='icon search-light-icon'></div>\r\n            </div>\r\n        );\r\n        //          render : 검색 버튼 렌더링 (true) //\r\n        return (\r\n            <div className='header-search-input-box'>\r\n                <input className='header-search-input' type='text' placeholder='검색어를 입력해주세요' value={searchWord} onChange={onSearchWordChangeHandler} onKeyDown={onSearchWordKeyDownHandler}/>\r\n                <div ref={searchButtonRef} className='icon-button' onClick={onSearchButtonClickHandler}>\r\n                    <div className='icon search-light-icon'></div>\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n\r\n       \r\n    };\r\n        //      component : 로그인 또는 마이페이지 버튼 컴포넌트       //  \r\n        const LoginMyPageButton = () => {\r\n\r\n        // event handler : 마이페이지 버튼 클릭                 //\r\n        const onMyPageButtonClickHandler = () => {\r\n            navigate(USER_PATH(''));\r\n        };\r\n        \r\n        const onSignInButtonClickHandler = () => {\r\n            navigate(AUTH_PATH());\r\n        };\r\n\r\n        if (isLogin)\r\n\r\n        //      render : 로그인 버튼 컴포넌트 렌더링            //\r\n            return (\r\n                <div className='white-button' onClick={onMyPageButtonClickHandler}>{'마이페이지'}</div>\r\n            );\r\n            return (<div className='black-button' onClick={onSignInButtonClickHandler}>{'로그인'}</div>\r\n            );\r\n        };\r\n\r\n    // render : 헤더 렌더링             //\r\n    return (\r\n    <div id='header'>\r\n        <div className='header-container'>\r\n            <div className='header-left-box' onClick={onLogoClickHandler}>\r\n                <div className='icon-box'>\r\n                    <div className='icon logo-dark-icon'></div>\r\n                </div>\r\n                <div className='header-logo'>{'Hoons Board'}</div>\r\n            </div>\r\n            <div className='header-right-box'>\r\n                <SearchButton />\r\n                <LoginMyPageButton />\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}