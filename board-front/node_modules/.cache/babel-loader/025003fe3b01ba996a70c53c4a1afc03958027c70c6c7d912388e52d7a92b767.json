{"ast":null,"code":"import axios from \"axios\";\nconst DOMAIN = 'http://localhost:4001';\nconst API_DOMAIN = `${DOMAIN}/api/v1`;\nconst authorization = accessToken => {\n  return {\n    headers: {\n      Authorization: `Bearer ${accessToken}`\n    }\n  };\n};\nconst SIGN_IN_URL = () => `${API_DOMAIN}/auth/sign-in`;\n_c = SIGN_IN_URL;\nconst SIGN_UP_URL = () => `${API_DOMAIN}/auth/sign-up`;\n_c2 = SIGN_UP_URL;\nexport const signInRequest = async requestBody => {\n  const result = await axios.post(SIGN_IN_URL(), requestBody).then(response => {\n    const responseBody = response.data;\n    return responseBody;\n  }).catch(error => {\n    if (!error.response) return null;\n    const responseBody = error.response.data;\n    return responseBody;\n  });\n  return result;\n};\nexport const signUpReqeust = async requestBody => {\n  const result = await axios.post(SIGN_UP_URL(), requestBody).then(response => {\n    const responseBody = response.data;\n    return responseBody;\n  }).catch(error => {\n    if (!error.response.data) return null;\n    const responseBody = error.response.data;\n    return responseBody;\n  });\n  return result;\n};\nconst GET_SIGN_IN_USER_URL = () => `${API_DOMAIN}/user`;\n_c3 = GET_SIGN_IN_USER_URL;\nexport const getSignInUserRequest = async accessToken => {\n  const result = await axios.get(GET_SIGN_IN_USER_URL(), authorization(accessToken)).then(response => {\n    const responseBody = response.data;\n    return responseBody;\n  }).catch(error => {\n    if (!error.response) return null;\n    const responseBody = error.response.data;\n    return responseBody;\n  });\n  return result;\n};\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"SIGN_IN_URL\");\n$RefreshReg$(_c2, \"SIGN_UP_URL\");\n$RefreshReg$(_c3, \"GET_SIGN_IN_USER_URL\");","map":{"version":3,"names":["axios","DOMAIN","API_DOMAIN","authorization","accessToken","headers","Authorization","SIGN_IN_URL","_c","SIGN_UP_URL","_c2","signInRequest","requestBody","result","post","then","response","responseBody","data","catch","error","signUpReqeust","GET_SIGN_IN_USER_URL","_c3","getSignInUserRequest","get","$RefreshReg$"],"sources":["C:/Users/tbs03/Spring_react_mysql/react_board/board-front/src/apis/index.ts"],"sourcesContent":["import axios from \"axios\";\r\nimport { SignInRequestDto, SignUpRequestDto } from \"./request/auth\";\r\nimport { SignInResponseDto, SignUpResponseDto } from \"./response/auth\";\r\nimport { ResponseDto } from \"./response\";\r\nimport { error } from \"console\";\r\nimport { GetSignInUserResponseDto } from \"./response/user\";\r\n\r\n\r\nconst DOMAIN = 'http://localhost:4001';\r\n\r\nconst API_DOMAIN = `${DOMAIN}/api/v1`;\r\n\r\nconst authorization = (accessToken : string) =>  {\r\n    return { headers: { Authorization : `Bearer ${accessToken}`} }\r\n};\r\n\r\nconst SIGN_IN_URL = () => `${API_DOMAIN}/auth/sign-in`;\r\nconst SIGN_UP_URL = () => `${API_DOMAIN}/auth/sign-up`;\r\n\r\nexport const signInRequest = async (requestBody: SignInRequestDto) => {\r\n    const result = await axios.post(SIGN_IN_URL(), requestBody)\r\n        .then(response => {\r\n            const responseBody: SignInResponseDto = response.data;\r\n            return responseBody;\r\n        })\r\n        .catch(error => {\r\n            if(!error.response) return null;\r\n            const responseBody: ResponseDto = error.response.data;\r\n            return responseBody;\r\n        })\r\n    return result;\r\n}\r\n\r\nexport const signUpReqeust = async (requestBody: SignUpRequestDto) => {\r\n    const result = await axios.post(SIGN_UP_URL(), requestBody)\r\n        .then(response => {\r\n            const responseBody : SignUpResponseDto = response.data;\r\n            return responseBody;\r\n        })\r\n        .catch(error => {\r\n            if(!error.response.data) return null;\r\n            const responseBody: ResponseDto = error.response.data;\r\n            return responseBody;\r\n        });                         \r\n\r\n     return result;\r\n}\r\n\r\nconst GET_SIGN_IN_USER_URL = () => `${API_DOMAIN}/user`;\r\n\r\nexport const getSignInUserRequest = async (accessToken: string) => {\r\n    const result = await axios.get(GET_SIGN_IN_USER_URL(), authorization(accessToken))\r\n        .then(response =>   {\r\n            const responseBody : GetSignInUserResponseDto = response.data;\r\n            return responseBody;\r\n        })\r\n        .catch(error => {\r\n            if(!error.response) return null;\r\n            const responseBody: ResponseDto = error.response.data;\r\n            return responseBody;\r\n\r\n        });\r\n    return result;\r\n}"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAQzB,MAAMC,MAAM,GAAG,uBAAuB;AAEtC,MAAMC,UAAU,GAAI,GAAED,MAAO,SAAQ;AAErC,MAAME,aAAa,GAAIC,WAAoB,IAAM;EAC7C,OAAO;IAAEC,OAAO,EAAE;MAAEC,aAAa,EAAI,UAASF,WAAY;IAAC;EAAE,CAAC;AAClE,CAAC;AAED,MAAMG,WAAW,GAAGA,CAAA,KAAO,GAAEL,UAAW,eAAc;AAACM,EAAA,GAAjDD,WAAW;AACjB,MAAME,WAAW,GAAGA,CAAA,KAAO,GAAEP,UAAW,eAAc;AAACQ,GAAA,GAAjDD,WAAW;AAEjB,OAAO,MAAME,aAAa,GAAG,MAAOC,WAA6B,IAAK;EAClE,MAAMC,MAAM,GAAG,MAAMb,KAAK,CAACc,IAAI,CAACP,WAAW,CAAC,CAAC,EAAEK,WAAW,CAAC,CACtDG,IAAI,CAACC,QAAQ,IAAI;IACd,MAAMC,YAA+B,GAAGD,QAAQ,CAACE,IAAI;IACrD,OAAOD,YAAY;EACvB,CAAC,CAAC,CACDE,KAAK,CAACC,KAAK,IAAI;IACZ,IAAG,CAACA,KAAK,CAACJ,QAAQ,EAAE,OAAO,IAAI;IAC/B,MAAMC,YAAyB,GAAGG,KAAK,CAACJ,QAAQ,CAACE,IAAI;IACrD,OAAOD,YAAY;EACvB,CAAC,CAAC;EACN,OAAOJ,MAAM;AACjB,CAAC;AAED,OAAO,MAAMQ,aAAa,GAAG,MAAOT,WAA6B,IAAK;EAClE,MAAMC,MAAM,GAAG,MAAMb,KAAK,CAACc,IAAI,CAACL,WAAW,CAAC,CAAC,EAAEG,WAAW,CAAC,CACtDG,IAAI,CAACC,QAAQ,IAAI;IACd,MAAMC,YAAgC,GAAGD,QAAQ,CAACE,IAAI;IACtD,OAAOD,YAAY;EACvB,CAAC,CAAC,CACDE,KAAK,CAACC,KAAK,IAAI;IACZ,IAAG,CAACA,KAAK,CAACJ,QAAQ,CAACE,IAAI,EAAE,OAAO,IAAI;IACpC,MAAMD,YAAyB,GAAGG,KAAK,CAACJ,QAAQ,CAACE,IAAI;IACrD,OAAOD,YAAY;EACvB,CAAC,CAAC;EAEL,OAAOJ,MAAM;AAClB,CAAC;AAED,MAAMS,oBAAoB,GAAGA,CAAA,KAAO,GAAEpB,UAAW,OAAM;AAACqB,GAAA,GAAlDD,oBAAoB;AAE1B,OAAO,MAAME,oBAAoB,GAAG,MAAOpB,WAAmB,IAAK;EAC/D,MAAMS,MAAM,GAAG,MAAMb,KAAK,CAACyB,GAAG,CAACH,oBAAoB,CAAC,CAAC,EAAEnB,aAAa,CAACC,WAAW,CAAC,CAAC,CAC7EW,IAAI,CAACC,QAAQ,IAAM;IAChB,MAAMC,YAAuC,GAAGD,QAAQ,CAACE,IAAI;IAC7D,OAAOD,YAAY;EACvB,CAAC,CAAC,CACDE,KAAK,CAACC,KAAK,IAAI;IACZ,IAAG,CAACA,KAAK,CAACJ,QAAQ,EAAE,OAAO,IAAI;IAC/B,MAAMC,YAAyB,GAAGG,KAAK,CAACJ,QAAQ,CAACE,IAAI;IACrD,OAAOD,YAAY;EAEvB,CAAC,CAAC;EACN,OAAOJ,MAAM;AACjB,CAAC;AAAA,IAAAL,EAAA,EAAAE,GAAA,EAAAa,GAAA;AAAAG,YAAA,CAAAlB,EAAA;AAAAkB,YAAA,CAAAhB,GAAA;AAAAgB,YAAA,CAAAH,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}