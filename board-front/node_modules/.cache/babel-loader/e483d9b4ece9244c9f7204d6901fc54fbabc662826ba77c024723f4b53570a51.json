{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tbs03\\\\Spring_react_mysql\\\\react_board\\\\board-front\\\\src\\\\views\\\\Authentication\\\\index.tsx\",\n  _s3 = $RefreshSig$();\nimport React, { useRef, useState } from 'react';\nimport './style.css';\nimport InputBox from 'components/InputBox';\nimport { signInRequest } from 'apis';\nimport { useCookies } from 'react-cookie';\nimport { MAIN_PATH } from 'constant';\nimport { useNavigate } from 'react-router-dom';\n\n//          component: 인증 화면 컴포넌트       //\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Authentication() {\n  _s3();\n  var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n  //    state: 화면 상태    //\n  const [view, setView] = useState('sign-in');\n\n  //    state : 쿠키 상태   //\n  const [cookies, setCookie] = useCookies();\n\n  //      function : 네비게이트 함수        //\n  const navigator = useNavigate();\n\n  //        component : sign in card 컴포넌트    //\n  const SignInCard = () => {\n    _s();\n    //    state: 이메일 요소 참조 상태    //\n    const emailRef = useRef(null);\n    //    state: 패스워드 요소 참조 상태    //\n    const passwordRef = useRef(null);\n\n    //    state: 이메일 상태    //\n    const [email, setEmail] = useState('');\n    //    state : 패스워드 상태       //\n    const [password, setPassword] = useState('');\n    //    state : 패스워드 타입 상태       //\n    const [passwordType, setPasswordType] = useState('password');\n    //    state : 패스워드 버튼 상태       //\n    const [passwordButtonIcon, setPasswordButtonIcon] = useState('eye-light-off-icon');\n    //    state : 에러 상태       //\n    const [error, setError] = useState(false);\n\n    //    function : signInResponse 처리함수           //\n    const signInResponse = responseBody => {\n      if (!responseBody) {\n        alert('네트워크 이상입니다.');\n        return;\n      }\n      const {\n        code\n      } = responseBody;\n      if (code === 'DBE') alert('데이터베이스 오류입니다.');\n      if (code === 'VF' || code === 'SF') setError(true);\n      if (code !== 'SU') return;\n      const {\n        token,\n        expirationTime\n      } = responseBody;\n      const now = new Date().getTime();\n      const expires = new Date(now + expirationTime * 1000);\n      setCookie('accessToken', token, {\n        expires,\n        path: MAIN_PATH()\n      });\n      navigator(MAIN_PATH());\n    };\n\n    //   event handler : 이메일 변경 이벤트 처리        //\n    const onEmailChangeHandler = event => {\n      setError(false);\n      const {\n        value\n      } = event.target;\n      setEmail(value);\n    };\n\n    //  event handler : 비밀번호 변경 이벤트 처리\n    const onPasswordChangeHandler = event => {\n      setError(false);\n      const {\n        value\n      } = event.target;\n      setPassword(value);\n    };\n\n    //   event handler : 로그인 버튼 클릭 이벤트 처리    //\n    const onSignInButtonClickHandler = () => {\n      const requestBody = {\n        email,\n        password\n      };\n      signInRequest(requestBody).then(signInResponse);\n    };\n\n    //   event handler : 회원가입 버튼 클릭 이벤트 처리    //\n    const onSignUpLinkClickHandler = () => {\n      setView('sign-up');\n    };\n\n    //   event handler : 패스워드 버튼 클릭 이벤트 처리    //\n    const onPasswordButtonClickHandler = () => {\n      if (passwordType === 'text') {\n        setPasswordType('password');\n        setPasswordButtonIcon('eye-light-off-icon');\n      } else {\n        setPasswordType('text');\n        setPasswordButtonIcon('eye-light-on-icon');\n      }\n    };\n    //   event handler : 이메일 인풋 키 다운 이벤트 처리    //\n    const onEmailKeyDownHandler = event => {\n      if (event.key !== 'Enter') return;\n      if (!passwordRef.current) return;\n      passwordRef.current.focus();\n    };\n\n    //   event handler : 이메일 인풋 키 다운 이벤트 처리    //\n    const onPasswordKeyDownHandler = event => {\n      if (event.key !== 'Enter') return;\n      onSignInButtonClickHandler();\n    };\n\n    //        render : sign up card 컴포넌트 렌더링 //\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auth-card\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"auth-card-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"auth-card-top\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"auth-card-title-box\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"auth-card-title\",\n              children: '로그인'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(InputBox, {\n            ref: emailRef,\n            label: \"\\uC774\\uBA54\\uC77C \\uC8FC\\uC18C\",\n            type: \"text\",\n            placeholder: \"\\uC774\\uBA54\\uC77C \\uC8FC\\uC18C\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694.\",\n            error: error,\n            value: email,\n            onChange: onEmailChangeHandler,\n            onKeyDown: onEmailKeyDownHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(InputBox, {\n            ref: passwordRef,\n            label: \"\\uD328\\uC2A4\\uC6CC\\uB4DC\",\n            type: passwordType,\n            placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694.\",\n            error: error,\n            value: password,\n            onChange: onPasswordChangeHandler,\n            icon: passwordButtonIcon,\n            onButtonClick: onPasswordButtonClickHandler,\n            onKeyDown: onPasswordKeyDownHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"auth-card-bottom\",\n          children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"auth-sign-in-error-box\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"auth-sign-in-error-message\",\n              children: '이메일 주소 또는 비밀번호를 잘못 입력했습니다. \\n 입력하신 내용을 다시 확인해주세요.'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"black-large-full-button\",\n            onClick: onSignInButtonClickHandler,\n            children: '로그인'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"auth-description-box\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"auth-description\",\n              children: ['신규 사용자이신가요?', /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"auth-description-link\",\n                onClick: onSignUpLinkClickHandler,\n                children: '회원가입'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 64\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this);\n  };\n  _s(SignInCard, \"+MankW9kCs+nZSw2btqK0txeSEY=\");\n  const SignUpCard = () => {\n    _s2();\n    //      state : 이메일 요소 참조 상태        //\n    const emailRef = useRef(null);\n    //      state : 패스워드 요소 참조 상태        //\n    const passwordRef = useRef(null);\n    //      state : 패스워드 확인 요소 참조 상태        //\n    const passwordCheckRef = useRef(null);\n\n    //      state : 페이지 번호 상태        //\n    const [page, setPage] = useState(1);\n\n    //      state : 이메일 상태        //\n    const [email, setEmail] = useState('');\n\n    //      state : 패스워드 상태        //\n    const [password, setPassword] = useState('');\n\n    //      state : 패스워드 체크 상태        //\n    const [passwordCheck, setPasswordCheck] = useState('');\n\n    //      state : 패스워드 타입 상태        //\n    const [passwordType, setPasswordType] = useState('password');\n    //      state : 패스워드 체크 타입 상태        //\n    const [passwordCheckType, setPasswordCheckType] = useState('password');\n\n    //      state : 이메일 에러 상태        //\n    const [isEmailError, setEmailError] = useState(false);\n\n    //      state : 패스워드 에러 상태        //\n    const [isPasswordError, setPasswordError] = useState(false);\n\n    //      state : 패스워드 확인 에러 상태        //\n    const [isPasswordCheckError, setPasswordCheckError] = useState(false);\n\n    //      state :이메일 에러 메세지 상태        //\n    const [emailErrorMessage, setEmailErrorMessage] = useState('');\n\n    //      state :패스워드 에러 메세지 상태        //\n    const [passwordErrorMessage, setPasswordErrorMessage] = useState('');\n\n    //      state :패스워드 확인 에러 메세지 상태        //\n    const [passwordCheckErrorMessage, setPasswordCheckErrorMessage] = useState('');\n\n    //      state : 패스워드 버튼 아이콘 상태         //\n    const [passwordButtonIcon, setPasswordButtonIcon] = useState('eye-light-off-icon');\n\n    //      state : 패스워드 버튼 아이콘 상태         //\n    const [passwordCheckButtonIcon, setPasswordCheckButtonIcon] = useState('eye-light-off-icon');\n\n    // event handler :  이메일 변경 이벤트 처리       //\n    const onEmailChangeHandler = event => {\n      const {\n        value\n      } = event.target;\n      setEmail(value);\n    };\n\n    // event handler :  패스워드 변경 이벤트 처리       //\n    const onPasswordChangeHandler = event => {\n      const {\n        value\n      } = event.target;\n      setPassword(value);\n    };\n\n    // event handler :  패스워드 확인 변경 이벤트 처리       //\n    const onPasswordCheckChangeHandler = event => {\n      const {\n        value\n      } = event.target;\n      setPasswordCheck(value);\n    };\n\n    // event handler : 패스워드 버튼 클릭 이벤트 처리       //\n    const onPasswordButtonClickHandler = () => {\n      if (passwordButtonIcon === 'eye-light-off-icon') {\n        setPasswordButtonIcon('eye-light-on-icon');\n        setPasswordType('text');\n      } else {\n        setPasswordButtonIcon('eye-light-off-icon');\n        setPasswordType('password');\n      }\n    };\n    // event handler : 패스워드 버튼 클릭 이벤트 처리       //\n    const onPasswordCheckButtonClickHandler = () => {\n      if (passwordButtonIcon === 'eye-light-off-icon') {\n        setPasswordCheckButtonIcon('eye-light-on-icon');\n        setPasswordCheckType('text');\n      } else {\n        setPasswordCheckButtonIcon('eye-light-off-icon');\n        setPasswordCheckType('password');\n      }\n    };\n\n    //  event handler : 다음 단계 버튼 클릭 이벤트 처리 //\n    const onNextButtonClickHandler = () => {\n      const emailPattern = /^[a-zA-Z0-9]*@([-.]?[a-zA-Z0-9])*\\.[a-zA-Z]{2,4}$/;\n      const isEmailPattern = emailPattern.test(email);\n      if (!isEmailPattern) {\n        setEmailError(true);\n        setEmailErrorMessage('이메일 주소 포맷이 맞지 않습니다.');\n      }\n      const isCheckedPassword = password.trim().length > 8;\n      if (isCheckedPassword) {\n        setPasswordError(true);\n        setPasswordErrorMessage('비밀번호는 8자 이상 입력해주세요.');\n      }\n      const isEqualPassword = password === passwordCheck;\n      if (isEqualPassword) {\n        setPasswordCheckError(true);\n        setPasswordCheckErrorMessage('비밀번호가 일치하지 않습니다.');\n      }\n      if (!isEmailPattern || !isCheckedPassword || !isEqualPassword) return;\n      setPage(2);\n    };\n\n    //  event handler : 이메일 키 다운 이벤트 처리      //\n    const onEmailKeyDownHandler = event => {\n      if (event.key == 'Enter') return;\n      if (!passwordRef.current) return;\n      passwordRef.current.focus();\n    };\n\n    //  event handler : 이메일 키 다운 이벤트 처리      //\n    const onPasswordKeyDownHandler = event => {\n      if (event.key == 'Enter') return;\n      if (!passwordCheckRef.current) return;\n      passwordCheckRef.current.focus();\n    };\n\n    //  event handler : 패스워드 확인 키 다운 이벤트 처리      //\n    const onPasswordCheckKeyDownHandler = event => {\n      if (event.key == 'Enter') return;\n      onNextButtonClickHandler();\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auth-card\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"auth-card-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"auth-card-top\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"auth-card-title-box\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"auth-card-title\",\n              children: '회원가입'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"auth-card-page\",\n              children: `${page}/2`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(InputBox, {\n            ref: emailRef,\n            label: \"\\uC774\\uBA54\\uC77C \\uC8FC\\uC18C*\",\n            type: \"text\",\n            placeholder: \"\\uC774\\uBA54\\uC77C \\uC8FC\\uC18C\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\",\n            value: email,\n            onChange: onEmailChangeHandler,\n            error: isEmailError,\n            message: emailErrorMessage,\n            onKeyDown: onEmailKeyDownHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(InputBox, {\n            ref: passwordRef,\n            label: \"\\uBE44\\uBC00\\uBC88\\uD638*\",\n            type: passwordType,\n            placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\",\n            value: password,\n            onChange: onPasswordChangeHandler,\n            error: isPasswordError,\n            message: passwordErrorMessage,\n            icon: passwordButtonIcon,\n            onButtonClick: onPasswordButtonClickHandler,\n            onKeyDown: onPasswordKeyDownHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(InputBox, {\n            ref: passwordCheckRef,\n            label: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uD655\\uC778*\",\n            type: passwordCheckType,\n            placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\\uB97C \\uB2E4\\uC2DC \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\",\n            value: passwordCheck,\n            onChange: onPasswordCheckChangeHandler,\n            error: isPasswordCheckError,\n            message: passwordCheckErrorMessage,\n            icon: passwordCheckButtonIcon,\n            onButtonClick: onPasswordCheckButtonClickHandler,\n            onKeyDown: onPasswordCheckKeyDownHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"auth-card-bottom\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"black-large-full-button\",\n            onClick: onNextButtonClickHandler,\n            children: '다음 단계'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"auth-description-box\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"auth-description\",\n              children: ['이미 계정이 있으신가요? ', /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"auth-description-link\",\n                children: '로그인'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 303,\n                columnNumber: 65\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 7\n    }, this);\n  };\n  //          render : 컴포넌트 렌더링            //    \n  _s2(SignUpCard, \"HFCJYWGHSjF1bAdyXRgxCDeoGy0=\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"auth-wrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auth-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"auth-jumbotron-box\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"auth-jumbotron-contents\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"auth-logo-icon\",\n            children: \" \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"auth-jumbotron-text-box\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"auth-jumbotron-text\",\n              children: '환영합니다'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"auth-jumbotron-text\",\n              children: 'HOONS BOARD 입니다'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 320,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 11\n      }, this), view === 'sign-in' && /*#__PURE__*/_jsxDEV(SignInCard, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 34\n      }, this), view === 'sign-up' && /*#__PURE__*/_jsxDEV(SignUpCard, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 34\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 313,\n    columnNumber: 5\n  }, this);\n}\n_s3(Authentication, \"9S/UTW4boHJSdDcSeMSTDXfl25A=\", false, function () {\n  return [useCookies, useNavigate];\n});\n_c = Authentication;\n;\nvar _c;\n$RefreshReg$(_c, \"Authentication\");","map":{"version":3,"names":["React","useRef","useState","InputBox","signInRequest","useCookies","MAIN_PATH","useNavigate","jsxDEV","_jsxDEV","Authentication","_s3","_s","$RefreshSig$","_s2","view","setView","cookies","setCookie","navigator","SignInCard","emailRef","passwordRef","email","setEmail","password","setPassword","passwordType","setPasswordType","passwordButtonIcon","setPasswordButtonIcon","error","setError","signInResponse","responseBody","alert","code","token","expirationTime","now","Date","getTime","expires","path","onEmailChangeHandler","event","value","target","onPasswordChangeHandler","onSignInButtonClickHandler","requestBody","then","onSignUpLinkClickHandler","onPasswordButtonClickHandler","onEmailKeyDownHandler","key","current","focus","onPasswordKeyDownHandler","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","label","type","placeholder","onChange","onKeyDown","icon","onButtonClick","onClick","SignUpCard","passwordCheckRef","page","setPage","passwordCheck","setPasswordCheck","passwordCheckType","setPasswordCheckType","isEmailError","setEmailError","isPasswordError","setPasswordError","isPasswordCheckError","setPasswordCheckError","emailErrorMessage","setEmailErrorMessage","passwordErrorMessage","setPasswordErrorMessage","passwordCheckErrorMessage","setPasswordCheckErrorMessage","passwordCheckButtonIcon","setPasswordCheckButtonIcon","onPasswordCheckChangeHandler","onPasswordCheckButtonClickHandler","onNextButtonClickHandler","emailPattern","isEmailPattern","test","isCheckedPassword","trim","length","isEqualPassword","onPasswordCheckKeyDownHandler","message","id","_c","$RefreshReg$"],"sources":["C:/Users/tbs03/Spring_react_mysql/react_board/board-front/src/views/Authentication/index.tsx"],"sourcesContent":["import React, { ChangeEvent, KeyboardEvent, useRef, useState } from 'react'\r\nimport './style.css';\r\nimport InputBox from 'components/InputBox';\r\nimport { SignInRequestDto } from 'apis/request/auth';\r\nimport { signInRequest } from 'apis';\r\nimport { SignInResponseDto } from 'apis/response/auth';\r\nimport { ResponseDto } from 'apis/response';\r\nimport { useCookies } from 'react-cookie';\r\nimport { MAIN_PATH } from 'constant';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\n\r\n//          component: 인증 화면 컴포넌트       //\r\nexport default function Authentication() {\r\n\r\n  //    state: 화면 상태    //\r\n  const [view, setView] = useState<'sign-in' | 'sign-up'>('sign-in');\r\n  \r\n  //    state : 쿠키 상태   //\r\n  const [cookies, setCookie] = useCookies();\r\n\r\n\r\n  //      function : 네비게이트 함수        //\r\n  const navigator = useNavigate();\r\n\r\n  //        component : sign in card 컴포넌트    //\r\n  const SignInCard = () => {\r\n    \r\n    //    state: 이메일 요소 참조 상태    //\r\n    const emailRef = useRef<HTMLInputElement | null>(null);\r\n    //    state: 패스워드 요소 참조 상태    //\r\n     const passwordRef = useRef<HTMLInputElement | null>(null);\r\n\r\n     \r\n\r\n    //    state: 이메일 상태    //\r\n    const [email, setEmail] = useState<string>('');\r\n    //    state : 패스워드 상태       //\r\n    const [password, setPassword] = useState<string>('');\r\n    //    state : 패스워드 타입 상태       //\r\n    const [passwordType, setPasswordType] = useState<'text' | 'password'>('password');\r\n    //    state : 패스워드 버튼 상태       //\r\n    const [passwordButtonIcon, setPasswordButtonIcon] = useState<'eye-light-off-icon' | 'eye-light-on-icon'>('eye-light-off-icon');\r\n    //    state : 에러 상태       //\r\n    const [error, setError] = useState<boolean>(false);\r\n\r\n    //    function : signInResponse 처리함수           //\r\n    const signInResponse = (responseBody: SignInResponseDto | ResponseDto | null) => {\r\n          if (!responseBody) {\r\n            alert('네트워크 이상입니다.');\r\n            return;\r\n          }\r\n          const { code } = responseBody;\r\n          if(code === 'DBE') alert('데이터베이스 오류입니다.');\r\n          if(code === 'VF' || code === 'SF') setError(true);\r\n          if(code !== 'SU') return ;\r\n          \r\n          const { token, expirationTime } = responseBody as SignInResponseDto;\r\n          const now = new Date().getTime();\r\n          const expires = new Date(now + expirationTime * 1000);\r\n\r\n          setCookie('accessToken', token, { expires, path: MAIN_PATH()});\r\n          navigator(MAIN_PATH());\r\n    }\r\n\r\n    //   event handler : 이메일 변경 이벤트 처리        //\r\n    const onEmailChangeHandler = (event: ChangeEvent<HTMLInputElement>) => {\r\n        setError(false);\r\n        const { value } = event.target;\r\n        setEmail(value);\r\n    }\r\n    \r\n    //  event handler : 비밀번호 변경 이벤트 처리\r\n    const onPasswordChangeHandler = (event: ChangeEvent<HTMLInputElement>) => {\r\n      setError(false);\r\n      const { value } = event.target;\r\n      setPassword(value);\r\n  }\r\n\r\n    //   event handler : 로그인 버튼 클릭 이벤트 처리    //\r\n    const onSignInButtonClickHandler = () => {\r\n      const requestBody: SignInRequestDto = { email, password};\r\n      signInRequest(requestBody).then(signInResponse);\r\n\r\n    }\r\n\r\n    //   event handler : 회원가입 버튼 클릭 이벤트 처리    //\r\n    const onSignUpLinkClickHandler = () => {\r\n        setView('sign-up');\r\n    }\r\n\r\n    //   event handler : 패스워드 버튼 클릭 이벤트 처리    //\r\n    const onPasswordButtonClickHandler = () => {\r\n     if(passwordType === 'text') {\r\n       setPasswordType('password');\r\n       setPasswordButtonIcon('eye-light-off-icon');\r\n     } else {\r\n       setPasswordType('text');\r\n       setPasswordButtonIcon('eye-light-on-icon')\r\n     }\r\n    }\r\n    //   event handler : 이메일 인풋 키 다운 이벤트 처리    //\r\n    const onEmailKeyDownHandler = (event:KeyboardEvent<HTMLInputElement>) => {\r\n       if(event.key !== 'Enter') return;\r\n       if(!passwordRef.current )  return;\r\n       passwordRef.current.focus();\r\n    }\r\n\r\n    //   event handler : 이메일 인풋 키 다운 이벤트 처리    //\r\n    const onPasswordKeyDownHandler = (event:KeyboardEvent<HTMLInputElement>) => {\r\n     if(event.key !== 'Enter') return;\r\n     onSignInButtonClickHandler();\r\n    \r\n  }\r\n\r\n\r\n    \r\n    //        render : sign up card 컴포넌트 렌더링 //\r\n    return (\r\n      <div className='auth-card'>\r\n        <div className='auth-card-box'>\r\n          <div className='auth-card-top'>\r\n            <div className='auth-card-title-box'>\r\n              <div className='auth-card-title'>{'로그인'}</div>\r\n            </div>\r\n            <InputBox ref={emailRef} label='이메일 주소' type='text' placeholder='이메일 주소를 입력해주세요.' error={error} value={email} onChange={onEmailChangeHandler} onKeyDown={onEmailKeyDownHandler} />\r\n            <InputBox ref={passwordRef} label='패스워드' type={passwordType} placeholder='비밀번호를 입력해주세요.' error={error} value={password} onChange={onPasswordChangeHandler} icon={passwordButtonIcon} onButtonClick={onPasswordButtonClickHandler} onKeyDown={onPasswordKeyDownHandler}/>\r\n          </div>\r\n          <div className='auth-card-bottom'>\r\n            {error && \r\n            \r\n            \r\n            <div className='auth-sign-in-error-box'>\r\n              <div className='auth-sign-in-error-message'>\r\n                {'이메일 주소 또는 비밀번호를 잘못 입력했습니다. \\n 입력하신 내용을 다시 확인해주세요.'}\r\n              </div>\r\n            </div>\r\n            }\r\n            <div className='black-large-full-button' onClick={onSignInButtonClickHandler}>{'로그인'}</div>\r\n            <div className='auth-description-box'>\r\n              <div className='auth-description'>{'신규 사용자이신가요?'}<span className='auth-description-link' onClick={onSignUpLinkClickHandler}>{'회원가입'}</span></div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n  const SignUpCard = () => {\r\n\r\n    //      state : 이메일 요소 참조 상태        //\r\n    const emailRef = useRef<HTMLInputElement | null >(null);\r\n    //      state : 패스워드 요소 참조 상태        //\r\n    const passwordRef = useRef<HTMLInputElement | null >(null);\r\n    //      state : 패스워드 확인 요소 참조 상태        //\r\n    const passwordCheckRef = useRef<HTMLInputElement | null >(null);\r\n    \r\n\r\n    //      state : 페이지 번호 상태        //\r\n    const [page, setPage] = useState<1 | 2>(1);\r\n\r\n    //      state : 이메일 상태        //\r\n    const [email, setEmail] = useState<string>('');\r\n\r\n    //      state : 패스워드 상태        //\r\n    const [password, setPassword] = useState<string>('');\r\n\r\n    //      state : 패스워드 체크 상태        //\r\n    const [passwordCheck, setPasswordCheck] = useState<string>('');\r\n\r\n    //      state : 패스워드 타입 상태        //\r\n    const [passwordType, setPasswordType] = useState<'text' | 'password'>('password');\r\n    //      state : 패스워드 체크 타입 상태        //\r\n    const [passwordCheckType, setPasswordCheckType] = useState<'text' | 'password'>('password');\r\n\r\n    //      state : 이메일 에러 상태        //\r\n    const [isEmailError, setEmailError] = useState<boolean>(false);\r\n\r\n    //      state : 패스워드 에러 상태        //\r\n    const [isPasswordError, setPasswordError] = useState<boolean>(false);\r\n\r\n    //      state : 패스워드 확인 에러 상태        //\r\n    const [isPasswordCheckError, setPasswordCheckError] = useState<boolean>(false);\r\n\r\n    //      state :이메일 에러 메세지 상태        //\r\n    const [emailErrorMessage, setEmailErrorMessage] = useState<string>('');\r\n\r\n    //      state :패스워드 에러 메세지 상태        //\r\n    const [passwordErrorMessage, setPasswordErrorMessage] = useState<string>('');\r\n\r\n    //      state :패스워드 확인 에러 메세지 상태        //\r\n    const [passwordCheckErrorMessage, setPasswordCheckErrorMessage] = useState<string>('');\r\n\r\n    //      state : 패스워드 버튼 아이콘 상태         //\r\n    const [passwordButtonIcon, setPasswordButtonIcon] = useState<'eye-light-off-icon' | 'eye-light-on-icon'>('eye-light-off-icon');\r\n\r\n     //      state : 패스워드 버튼 아이콘 상태         //\r\n    const [passwordCheckButtonIcon, setPasswordCheckButtonIcon] = useState<'eye-light-off-icon' | 'eye-light-on-icon'>('eye-light-off-icon');\r\n\r\n    // event handler :  이메일 변경 이벤트 처리       //\r\n    const onEmailChangeHandler = (event:ChangeEvent<HTMLInputElement>) => {\r\n      const { value } = event.target;\r\n      setEmail(value);\r\n    }\r\n\r\n    // event handler :  패스워드 변경 이벤트 처리       //\r\n    const onPasswordChangeHandler = (event:ChangeEvent<HTMLInputElement>) => {\r\n      const { value } = event.target;\r\n      setPassword(value);\r\n    }\r\n\r\n    // event handler :  패스워드 확인 변경 이벤트 처리       //\r\n    const onPasswordCheckChangeHandler = (event:ChangeEvent<HTMLInputElement>) => {\r\n      const { value } = event.target;\r\n      setPasswordCheck(value);\r\n    }\r\n\r\n    // event handler : 패스워드 버튼 클릭 이벤트 처리       //\r\n    const onPasswordButtonClickHandler = () => {\r\n      if ( passwordButtonIcon === 'eye-light-off-icon') {\r\n        setPasswordButtonIcon('eye-light-on-icon');\r\n        setPasswordType('text');\r\n      }\r\n      else {\r\n        setPasswordButtonIcon('eye-light-off-icon');\r\n        setPasswordType('password');\r\n\r\n      }\r\n    }\r\n     // event handler : 패스워드 버튼 클릭 이벤트 처리       //\r\n     const onPasswordCheckButtonClickHandler = () => {\r\n      if ( passwordButtonIcon === 'eye-light-off-icon') {\r\n        setPasswordCheckButtonIcon('eye-light-on-icon');\r\n        setPasswordCheckType('text');\r\n      }\r\n      else {\r\n        setPasswordCheckButtonIcon('eye-light-off-icon');\r\n        setPasswordCheckType('password');\r\n\r\n      }\r\n    }\r\n\r\n    //  event handler : 다음 단계 버튼 클릭 이벤트 처리 //\r\n    const onNextButtonClickHandler = () => {\r\n      const emailPattern = /^[a-zA-Z0-9]*@([-.]?[a-zA-Z0-9])*\\.[a-zA-Z]{2,4}$/;\r\n      const isEmailPattern = emailPattern.test(email);\r\n      if(!isEmailPattern) {\r\n        setEmailError(true);\r\n        setEmailErrorMessage('이메일 주소 포맷이 맞지 않습니다.')\r\n      }\r\n    const isCheckedPassword = password.trim().length > 8\r\n      if(isCheckedPassword) {\r\n        setPasswordError(true);\r\n        setPasswordErrorMessage('비밀번호는 8자 이상 입력해주세요.');\r\n      }\r\n    const isEqualPassword = password === passwordCheck;\r\n    if(isEqualPassword) {\r\n      setPasswordCheckError(true);\r\n      setPasswordCheckErrorMessage('비밀번호가 일치하지 않습니다.');\r\n    }\r\n    if(!isEmailPattern || !isCheckedPassword || !isEqualPassword) return;\r\n      setPage(2);\r\n    }\r\n\r\n    //  event handler : 이메일 키 다운 이벤트 처리      //\r\n    const onEmailKeyDownHandler = (event: KeyboardEvent<HTMLInputElement>) => {\r\n      if(event.key ! == 'Enter') return;\r\n      if(!passwordRef.current) return;\r\n      passwordRef.current.focus();\r\n    }\r\n\r\n    //  event handler : 이메일 키 다운 이벤트 처리      //\r\n    const onPasswordKeyDownHandler = (event: KeyboardEvent<HTMLInputElement>) => {\r\n      if(event.key ! == 'Enter') return;\r\n      if(!passwordCheckRef.current) return;\r\n      passwordCheckRef.current.focus();\r\n    }\r\n\r\n    //  event handler : 패스워드 확인 키 다운 이벤트 처리      //\r\n    const onPasswordCheckKeyDownHandler = (event: KeyboardEvent<HTMLInputElement>) => {\r\n      if(event.key ! == 'Enter') return;\r\n      onNextButtonClickHandler();\r\n    }\r\n    \r\n    \r\n\r\n    \r\n\r\n    return (\r\n      <div className='auth-card'>\r\n        <div className='auth-card-box'>\r\n          <div className='auth-card-top'>\r\n            <div className='auth-card-title-box'>\r\n              <div className='auth-card-title'>{'회원가입'}</div>\r\n              <div className='auth-card-page'>{`${page}/2`}</div>\r\n            </div>\r\n            <InputBox ref={emailRef} label='이메일 주소*' type='text' placeholder='이메일 주소를 입력해주세요' value={email} onChange={onEmailChangeHandler} error={isEmailError} message={emailErrorMessage} onKeyDown={onEmailKeyDownHandler}/>\r\n            <InputBox ref={passwordRef} label='비밀번호*' type={passwordType} placeholder='비밀번호를 입력해주세요' value={password} onChange={onPasswordChangeHandler} error={isPasswordError} message={passwordErrorMessage} icon={passwordButtonIcon} onButtonClick={onPasswordButtonClickHandler} onKeyDown={onPasswordKeyDownHandler} />\r\n            <InputBox ref={passwordCheckRef} label='비밀번호 확인*' type={passwordCheckType} placeholder='비밀번호를 다시 입력해주세요' value={passwordCheck} onChange={onPasswordCheckChangeHandler} error={isPasswordCheckError} message={passwordCheckErrorMessage} icon={passwordCheckButtonIcon} onButtonClick={onPasswordCheckButtonClickHandler} onKeyDown={onPasswordCheckKeyDownHandler}/>\r\n          </div>\r\n          <div className='auth-card-bottom'>\r\n            <div className='black-large-full-button' onClick={onNextButtonClickHandler}>{'다음 단계'}</div>\r\n            <div className='auth-description-box'>\r\n            <div className='auth-description'>{'이미 계정이 있으신가요? '}<span className='auth-description-link' >{'로그인'}</span></div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n\r\n  };\r\n//          render : 컴포넌트 렌더링            //    \r\n  return (\r\n    <div id='auth-wrapper'>\r\n        <div className='auth-container'>\r\n          <div className='auth-jumbotron-box'>\r\n              <div className='auth-jumbotron-contents'>\r\n                  <div className='auth-logo-icon'> </div>\r\n                  <div className='auth-jumbotron-text-box'> \r\n                    <div className='auth-jumbotron-text'>{'환영합니다'}</div>  \r\n                    <div className='auth-jumbotron-text'>{'HOONS BOARD 입니다'}</div>  \r\n                  </div>\r\n              </div>\r\n          </div>\r\n          \r\n          {view === 'sign-in' && <SignInCard />}\r\n          {view === 'sign-up' && <SignUpCard />}\r\n        </div>\r\n    </div>\r\n  )\r\n\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}